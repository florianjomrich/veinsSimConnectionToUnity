digraph "ConstMapping::createConstIterator" {
	graph [rankdir=LR];
	node [label="\N", fontname=Helvetica, fontsize=10, shape=record];
	edge [fontname=Helvetica, fontsize=10, labelfontname=Helvetica, labelfontsize=10];
	graph [bb="0,0,1498,465"];
	Node1 [label="ConstMapping::createConst\lIterator", height="0.39", width="1.97", color=black, fillcolor=grey75, style=filled, fontcolor=black, pos="80,221", rects="9,207,152,235"];
	Node2 [label="MappingUtils::applyElement\lWiseOperator", height="0.39", width="2.08", color=black, fillcolor=white, style=filled, URL="$class_mapping_utils.html#a2864c33a93f9ce23403d0c84ca9a19e2", pos="271,451", rects="196,437,346,465"];
	Node3 [label="SNRThresholdDecider\l::canAnswerCSR", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#a0946c7a3e2ee04e2bb1c2dce4b7be7ec", tooltip="Returns point in time when the ChannelSenseRequest of the passed CSRInfo can be answered (e...", pos="271,405", rects="211,391,332,419"];
	Node4 [label="MappingUtils::createCompatible\lMapping", height="0.39", width="2.31", color=black, fillcolor=white, style=filled, URL="$class_mapping_utils.html#a6d524e08add1a4a02d7e37425783b094", pos="271,359", rects="188,345,354,373"];
	Node5 [label="ConstMappingWrapper\l::createConstIterator", height="0.39", width="1.75", color=black, fillcolor=white, style=filled, URL="$class_const_mapping_wrapper.html#a6a2c09d666b9e986798d0be48add4cdd", tooltip="Returns an ConstMappingIterator by use of the respective implementation of the \"createIterator()\"-met...", pos="271,313", rects="208,299,335,327"];
	Node6 [label="ConcatConstMapping\l::createConstIterator", height="0.39", width="1.61", color=black, fillcolor=white, style=filled, URL="$class_concat_const_mapping.html#a417cebabd88daa682ea0f3cae877eae2", tooltip="Returns a pointer of a new Iterator which is able to iterate over this Mapping. ", pos="271,267", rects="213,253,330,281"];
	Node7 [label="LinearIntplMapping\l::createIterator", height="0.39", width="1.53", color=black, fillcolor=white, style=filled, URL="$class_linear_intpl_mapping.html#ad0da987f0b7bd22db5a18ca2558533a4", tooltip="Creates an iterator for this mapping starting at the passed position. ", pos="271,221", rects="216,207,326,235"];
	Node8 [label="ConstMappingWrapper\l::createIterator", height="0.39", width="1.75", color=black, fillcolor=white, style=filled, URL="$class_const_mapping_wrapper.html#ab5c7771bd13f8cdb93f5dce837fdffa1", tooltip="Returns a pointer of a new Iterator which is able to iterate over the Mapping and can change it...", pos="271,175", rects="208,161,335,189"];
	Node9 [label="FilledUpMapping::FilledUp\lMapping", height="0.39", width="1.97", color=black, fillcolor=white, style=filled, URL="$class_filled_up_mapping.html#aa090d76ebccf9be3283594989b528ba7", pos="271,129", rects="200,115,343,143"];
	Node10 [label="MappingUtils::findMax", height="0.22", width="1.72", color=black, fillcolor=white, style=filled, URL="$class_mapping_utils.html#afbe1a1e1d2becd66d2c0d5a8ac42b478", tooltip="Iterates over the passed mapping and returns value at the key entry with the highest value...", pos="271,89", rects="209,81,334,97"];
	Node11 [label="BaseDecider::calcChannel\lSenseRSSI", height="0.39", width="1.83", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a12dd419a9e88e0b28f8d4e530e058802", tooltip="Calculates the RSSI value for the passed interval. ", pos="460,154", rects="394,140,527,168"];
	Node12 [label="BaseDecider::answerCSR", height="0.22", width="1.81", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ab8e925001d1f8630338c50f8ec10bb0d", tooltip="Answers the ChannelSenseRequest (CSR) from the passed CSRInfo. ", pos="643,128", rects="578,120,709,136"];
	Node13 [label="BaseDecider::channelState\lChanged", height="0.39", width="1.86", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#add7242168c4bb521c6335f3de590e4b0", tooltip="Checks if the changed channel state enables us to answer any ongoing ChannelSenseRequests. ", pos="835,174", rects="768,160,903,188"];
	Node14 [label="SNRThresholdDecider\l::processNewSignal", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#ace13845f43c5328cea40eb00c59af2b3", tooltip="Processes a new Signal. ", pos="1032,128", rects="972,114,1093,142"];
	Node15 [label="Decider80211p::setChannel\lIdleStatus", height="0.39", width="1.86", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#af06ba4862697730ee05b65f6bf90279b", tooltip="Changes the \"isIdle\"-status to the passed value. ", pos="1032,174", rects="965,160,1099,188"];
	Node16 [label="Decider80211p::processNew\lSignal", height="0.39", width="1.92", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#a2a8f4a380e5a2ba44c36e43cc2033270", tooltip="Processes a new Signal. ", pos="1233,158", rects="1164,144,1303,172"];
	Node17 [label="Decider80211p::processSignalEnd", height="0.22", width="2.31", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#ac39637b3c4cfad57ba0b4518fea264d9", tooltip="Processes a received AirFrame. ", pos="1233,42", rects="1150,34,1316,50"];
	Node18 [label="PhyLayer80211p::handleSelf\lMessage", height="0.39", width="2.00", color=black, fillcolor=white, style=filled, URL="$class_phy_layer80211p.html#a6ab453897d17cd1dab056d03594dbb72", tooltip="Handles self scheduled messages. ", pos="1233,103", rects="1161,89,1305,117"];
	Node19 [label="BaseDecider::setChannelIdle\lStatus", height="0.39", width="2.03", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ae535b44e34061014fe282c36c27b0193", tooltip="Changes the \"isIdle\"-status to the passed value. ", pos="1032,220", rects="959,206,1105,234"];
	Node20 [label="BaseDecider::processNewSignal", height="0.22", width="2.25", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a6a480f87157d0509c0c1fccf94ea9fef", tooltip="Processes a new Signal. ", pos="1233,236", rects="1152,228,1315,244"];
	Node21 [label="BaseDecider::processSignal", height="0.22", width="1.92", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a273892d7b0c9874e4efe3c7755aa7a17", tooltip="Processes an AirFrame given by the PhyLayer. ", pos="1421,219", rects="1352,211,1490,227"];
	Node22 [label="BaseDecider::processSignalEnd", height="0.22", width="2.19", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ab9cfef6c04e12d2524d45e881f341300", tooltip="Processes the end of a received Signal. ", pos="1233,202", rects="1154,194,1313,210"];
	Node23 [label="BaseDecider::handleNewSense\lRequest", height="0.39", width="2.17", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a1dba383c238fba606279ef483b435f78", tooltip="Handles a new incoming ChannelSenseRequest and returns the next (or latest) time to handle the reques...", pos="835,128", rects="757,114,914,142"];
	Node24 [label="BaseDecider::handleChannel\lSenseRequest", height="0.39", width="2.06", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#afd31e5a65d1798d329ace9bdbec25d64", tooltip="This function is called by the PhyLayer to hand over a ChannelSenseRequest. ", pos="1032,82", rects="958,68,1106,96"];
	Node25 [label="BaseDecider::handleSense\lRequestEnd", height="0.39", width="1.83", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a2f175306cc0ae9d2805bc050315a47d8", tooltip="Handles the timeout or end of a ChannelSenseRequest by calculating the ChannelState and returning the...", pos="835,82", rects="769,68,902,96"];
	Node26 [label="SNRThresholdDecider\l::getChannelState", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#a1e6266fe8a4d10ce5443e37321d3bcaa", tooltip="A function that returns information about the channel state. ", pos="643,211", rects="583,197,704,225"];
	Node27 [label="SNRThresholdDecider\l::answerCSR", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#aa7e33361b328274b04ff7bd2d6206e6d", tooltip="Answers the ChannelSenseRequest (CSR) from the passed CSRInfo. ", pos="835,220", rects="775,206,896,234"];
	Node28 [label="BaseDecider::getChannelState", height="0.22", width="2.11", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#af471a55749109aacb99429b409ccb9c1", tooltip="A function that returns information about the channel state. ", pos="643,162", rects="567,154,720,170"];
	Node29 [label="Decider80211p::calcChannel\lSenseRSSI", height="0.39", width="1.94", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#a09e54d78f37b5e61aa100ea5b9f3083f", tooltip="Calculates the RSSI value for the passed ChannelSenseRequest. ", pos="460,92", rects="390,78,530,106"];
	Node30 [label="MappingUtils::findMin", height="0.22", width="1.69", color=black, fillcolor=white, style=filled, URL="$class_mapping_utils.html#a5d9c4e3dcaddccfa65f21212d0fee2cf", tooltip="Iterates over the passed mapping and returns value at the key entry with the smallest value...", pos="835,42", rects="774,34,897,50"];
	Node31 [label="Decider80211p::checkIfSignalOk", height="0.22", width="2.25", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#a01349c12df6c01678d1e25553b754819", tooltip="Checks a mapping against a specific threshold (element-wise). ", pos="1032,8", rects="951,0,1114,16"];
	Node32 [label="Decider80211p::cca", height="0.22", width="1.33", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#aeba984a7f23ef26ce8b22b0bfef88947", pos="1032,42", rects="984,34,1080,50"];
	Node33 [label="ConstMapping::print", height="0.22", width="1.53", color=black, fillcolor=white, style=filled, URL="$class_const_mapping.html#a526e8d5b948e9b2ce9d729e66b162e13", tooltip="Prints the Mapping to an output stream. ", pos="271,14", rects="216,6,326,22"];
	Node1 -> Node2 [dir=back, color=midnightblue, style=solid, pos="s,152,235 159,242 209,305 126,375 188,437 190,439 193,441 196,443"];
	Node1 -> Node3 [dir=back, color=midnightblue, style=solid, pos="s,152,235 159,242 198,290 139,344 188,391 194,397 202,400 210,403"];
	Node1 -> Node4 [dir=back, color=midnightblue, style=solid, pos="s,152,235 159,242 186,274 152,313 188,345"];
	Node1 -> Node5 [dir=back, color=midnightblue, style=solid, pos="s,152,235 159,241 176,259 165,282 188,299 194,303 200,306 207,308"];
	Node1 -> Node6 [dir=back, color=midnightblue, style=solid, pos="s,152,235 161,238 170,243 175,248 188,253 196,255 204,257 212,259"];
	Node1 -> Node7 [dir=back, color=midnightblue, style=solid, pos="s,152,221 162,221 180,221 199,221 216,221"];
	Node1 -> Node8 [dir=back, color=midnightblue, style=solid, pos="s,152,207 161,204 170,199 175,194 188,189 194,187 201,185 207,184"];
	Node1 -> Node9 [dir=back, color=midnightblue, style=solid, pos="s,152,207 159,201 176,183 165,160 188,143 192,141 195,139 199,137"];
	Node1 -> Node10 [dir=back, color=midnightblue, style=solid, pos="s,152,207 159,200 186,167 151,128 188,97 194,92 201,89 208,87"];
	Node10 -> Node11 [dir=back, color=midnightblue, style=solid, pos="s,334,90 343,92 347,94 351,95 354,97 377,109 369,128 390,140 391,141 392,141 393,142"];
	Node11 -> Node12 [dir=back, color=midnightblue, style=solid, pos="s,527,142 536,141 546,139 556,138 566,136 570,136 573,135 577,135"];
	Node12 -> Node13 [dir=back, color=midnightblue, style=solid, pos="s,709,133 718,135 718,136 719,136 720,136 739,143 739,153 756,160 760,162 764,163 767,164"];
	Node13 -> Node14 [dir=back, color=midnightblue, style=solid, pos="s,903,164 911,161 912,161 913,160 914,160 931,155 933,148 950,142 957,140 964,138 971,137"];
	Node13 -> Node15 [dir=back, color=midnightblue, style=solid, pos="s,903,174 913,174 930,174 948,174 965,174"];
	Node15 -> Node16 [dir=back, color=midnightblue, style=solid, pos="s,1099,169 1109,168 1127,166 1145,165 1163,164"];
	Node15 -> Node17 [dir=back, color=midnightblue, style=solid, pos="s,1099,169 1107,165 1110,164 1112,162 1114,160 1153,127 1110,83 1150,50"];
	Node15 -> Node18 [dir=back, color=midnightblue, style=solid, pos="s,1099,167 1107,164 1109,163 1112,161 1114,160 1136,148 1129,130 1150,117 1153,115 1157,113 1161,112"];
	Node13 -> Node19 [dir=back, color=midnightblue, style=solid, pos="s,903,185 912,187 912,188 913,188 914,188 931,194 933,201 950,206 953,207 956,208 959,209"];
	Node19 -> Node20 [dir=back, color=midnightblue, style=solid, pos="s,1105,226 1114,227 1126,227 1139,228 1151,229"];
	Node20 -> Node21 [dir=back, color=midnightblue, style=solid, pos="s,1315,229 1324,228 1333,227 1343,227 1352,225"];
	Node19 -> Node22 [dir=back, color=midnightblue, style=solid, pos="s,1105,213 1115,212 1128,211 1140,210 1153,209"];
	Node22 -> Node21 [dir=back, color=midnightblue, style=solid, pos="s,1313,209 1322,210 1332,211 1342,212 1352,213"];
	Node12 -> Node23 [dir=back, color=midnightblue, style=solid, pos="s,709,128 719,128 731,128 744,128 756,128"];
	Node23 -> Node24 [dir=back, color=midnightblue, style=solid, pos="s,914,114 923,111 932,106 937,101 950,96 953,95 955,94 958,94"];
	Node12 -> Node25 [dir=back, color=midnightblue, style=solid, pos="s,709,123 717,121 718,121 719,120 720,120 739,114 739,104 756,96 760,94 764,93 768,92"];
	Node25 -> Node24 [dir=back, color=midnightblue, style=solid, pos="s,902,82 912,82 927,82 942,82 958,82"];
	Node11 -> Node26 [dir=back, color=midnightblue, style=solid, pos="s,527,167 535,171 549,179 550,190 566,197 571,199 577,201 582,203"];
	Node26 -> Node27 [dir=back, color=midnightblue, style=solid, pos="s,704,214 713,214 733,215 755,216 774,217"];
	Node11 -> Node28 [dir=back, color=midnightblue, style=solid, pos="s,527,157 536,157 546,157 556,158 566,159"];
	Node10 -> Node29 [dir=back, color=midnightblue, style=solid, pos="s,334,90 343,90 358,90 375,91 390,91"];
	Node1 -> Node30 [dir=back, color=midnightblue, style=solid, pos="s,101,207 110,205 130,202 142,209 160,195 176,184 174,176 180,158 183,152 183,151 184,144 186,137 183,78 188,72 230,32 620,37 77\
3,40"];
	Node30 -> Node31 [dir=back, color=midnightblue, style=solid, pos="s,897,38 906,36 908,36 911,35 914,34 932,30 933,21 950,16"];
	Node31 -> Node17 [dir=back, color=midnightblue, style=solid, pos="s,1114,16 1123,19 1133,24 1136,31 1150,34"];
	Node30 -> Node32 [dir=back, color=midnightblue, style=solid, pos="s,897,42 907,42 932,42 961,42 984,42"];
	Node32 -> Node16 [dir=back, color=midnightblue, style=solid, pos="s,1080,38 1089,39 1098,41 1106,45 1114,50 1150,78 1116,116 1150,144 1154,147 1159,150 1163,152"];
	Node32 -> Node17 [dir=back, color=midnightblue, style=solid, pos="s,1080,42 1089,42 1108,42 1129,42 1150,42"];
	Node32 -> Node18 [dir=back, color=midnightblue, style=solid, pos="s,1080,41 1088,42 1097,43 1106,46 1114,50 1136,61 1130,78 1150,89 1153,91 1157,93 1161,94"];
	Node1 -> Node33 [dir=back, color=midnightblue, style=solid, pos="s,152,207 159,199 205,142 129,77 188,22 196,15 206,12 216,10"];
}
