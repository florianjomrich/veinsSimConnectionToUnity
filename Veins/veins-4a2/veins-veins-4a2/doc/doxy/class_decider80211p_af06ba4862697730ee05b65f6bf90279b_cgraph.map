digraph "Decider80211p::setChannelIdleStatus" {
	graph [rankdir=LR];
	node [label="\N", fontname=Helvetica, fontsize=10, shape=record];
	edge [fontname=Helvetica, fontsize=10, labelfontname=Helvetica, labelfontsize=10];
	graph [bb="0,0,1280,564"];
	Node1 [label="Decider80211p::setChannel\lIdleStatus", height="0.39", width="1.86", color=black, fillcolor=grey75, style=filled, fontcolor=black, pos="75,203", rects="8,189,142,217"];
	Node2 [label="BaseDecider::channelState\lChanged", height="0.39", width="1.86", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#add7242168c4bb521c6335f3de590e4b0", tooltip="Checks if the changed channel state enables us to answer any ongoing ChannelSenseRequests. ", pos="246,264", rects="179,250,314,278"];
	Node3 [label="BaseDecider::CSRInfo\l::getRequest", height="0.39", width="1.61", color=black, fillcolor=white, style=filled, URL="$struct_base_decider_1_1_c_s_r_info.html#a080b7bc98ed8cbdb7c744609b1bedb58", pos="426,382", rects="368,368,485,396"];
	Node4 [label="BaseDecider::canAnswerCSR", height="0.22", width="2.11", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#aad89f97ba5dcfd556be7556f04a840b1", tooltip="Returns point in time when the ChannelSenseRequest of the passed CSRInfo can be answered (e...", pos="426,342", rects="350,334,502,350"];
	Node5 [label="ChannelSenseRequest\l::getSenseMode", height="0.39", width="1.64", color=black, fillcolor=white, style=filled, URL="$class_channel_sense_request.html#a27ef56313d2b2b273fba86467906518b", pos="605,388", rects="546,374,664,402"];
	Node6 [label="DeciderToPhyInterface\l::getSimTime", height="0.39", width="1.72", color=black, fillcolor=white, style=filled, URL="$class_decider_to_phy_interface.html#a73660771f127a990489fb04da07ea39e", tooltip="Returns the current simulation time. ", pos="605,296", rects="543,282,668,310"];
	Node7 [label="ChannelSenseRequest\l::getSenseTimeout", height="0.39", width="1.64", color=black, fillcolor=white, style=filled, URL="$class_channel_sense_request.html#a174933b0466807743cee69e497b39543", pos="605,342", rects="546,328,664,356"];
	Node8 [label="DeciderToPhyInterface\l::cancelScheduledMessage", height="0.39", width="1.86", color=black, fillcolor=white, style=filled, URL="$class_decider_to_phy_interface.html#af85151048dba05ec27e378000fd95403", tooltip="Tells the PhyLayer to cancel a scheduled message (AirFrame or ControlMessage). ", pos="426,264", rects="359,250,493,278"];
	Node9 [label="BaseDecider::answerCSR", height="0.22", width="1.81", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ab8e925001d1f8630338c50f8ec10bb0d", tooltip="Answers the ChannelSenseRequest (CSR) from the passed CSRInfo. ", pos="426,224", rects="361,216,492,232"];
	Node10 [label="BaseDecider::calcChannel\lSenseRSSI", height="0.39", width="1.83", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a12dd419a9e88e0b28f8d4e530e058802", tooltip="Calculates the RSSI value for the passed interval. ", pos="605,246", rects="539,232,672,260"];
	Node11 [label="BaseDecider::calculateRSSIMapping", height="0.22", width="2.56", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a8ca42b7d77c0a1510255ec2a451d06d0", tooltip="Calculates a RSSI-Mapping (or Noise-Strength-Mapping) for a Signal. ", pos="801,386", rects="709,378,894,394"];
	Node12 [label="Veins::AirFrame::getId", height="0.22", width="1.61", color=black, fillcolor=white, style=filled, URL="$class_veins_1_1_air_frame.html#abac89b81d2c1fdce7f64bd6c91811032", pos="1008,556", rects="950,548,1067,564"];
	Node13 [label="BaseDecider::getChannelInfo", height="0.22", width="2.08", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a1eb9539d907f101c8d30798f6ca03337", tooltip="Collects the AirFrame on the channel during the passed interval. ", pos="1008,522", rects="933,514,1084,530"];
	Node14 [label="DeciderToPhyInterface\l::getChannelInfo", height="0.39", width="1.72", color=black, fillcolor=white, style=filled, URL="$class_decider_to_phy_interface.html#aa7af5edbbc50269a93c10bd682aa79f6", tooltip="Fills the passed AirFrameVector with all AirFrames that intersect with the time interval [from...", pos="1197,525", rects="1135,511,1260,539"];
	Node15 [label="MappingUtils::createMapping", height="0.22", width="2.14", color=black, fillcolor=white, style=filled, URL="$class_mapping_utils.html#a0c61c76ba04339162563339b23bf42e9", tooltip="Returns an appropriate changeable Mapping with the specified domain and the specified interpolation m...", pos="1008,488", rects="931,480,1086,496"];
	Node16 [label="DimensionSet::hasDimension", height="0.22", width="2.08", color=black, fillcolor=white, style=filled, URL="$class_dimension_set.html#a015cb6fa6c77b26b8c7b1e65827b8342", tooltip="Returns true if the passed Dimension is inside this DimensionSet. ", pos="1197,485", rects="1122,477,1272,493"];
	Node17 [label="Signal::getReceivingPower", height="0.22", width="1.92", color=black, fillcolor=white, style=filled, URL="$class_signal.html#a513b1abac0b04549585257f7f5f8ebea", tooltip="Calculates and returns the receiving power of this Signal. ", pos="1008,454", rects="939,446,1077,462"];
	Node18 [label="Signal::getReceptionStart", height="0.22", width="1.78", color=black, fillcolor=white, style=filled, URL="$class_signal.html#a7c4710243cf87caf7dfc9f313e2619b2", tooltip="Returns the point in time when the receiving of the Signal started at the receiver module...", pos="1008,420", rects="944,412,1073,428"];
	Node19 [label="Signal::getReceptionEnd", height="0.22", width="1.75", color=black, fillcolor=white, style=filled, URL="$class_signal.html#a2875223239e124d85949e1116cc12ae9", tooltip="Returns the point in time when the receiving of the Signal ended at the receiver module. ", pos="1008,386", rects="945,378,1072,394"];
	Node20 [label="MappingUtils::add", height="0.22", width="1.36", color=black, fillcolor=white, style=filled, URL="$class_mapping_utils.html#a0d8bf65254d099c87948c1c300986696", pos="1008,352", rects="959,344,1058,360"];
	Node21 [label="MappingUtils::applyElement\lWiseOperator", height="0.39", width="2.08", color=black, fillcolor=white, style=filled, URL="$class_mapping_utils.html#a45c56f1ea72b2f8b278d1016ac6228df", pos="1197,295", rects="1122,281,1272,309"];
	Node22 [label="DeciderToPhyInterface\l::getThermalNoise", height="0.39", width="1.72", color=black, fillcolor=white, style=filled, URL="$class_decider_to_phy_interface.html#a2c55926187883df5bc322c947d317534", tooltip="Returns a Mapping which defines the thermal noise in the passed time frame (in mW). ", pos="1008,312", rects="946,298,1071,326"];
	Node23 [label="Veins::AirFrame::getSignal", height="0.22", width="1.89", color=black, fillcolor=white, style=filled, URL="$class_veins_1_1_air_frame.html#a50cfde43def85076f0ba2e9ad16d18a4", pos="1008,272", rects="940,264,1077,280"];
	Node24 [label="MappingUtils::subtract", height="0.22", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_mapping_utils.html#a37d38fd0a9593e6f055ac8d90758965e", pos="1008,238", rects="948,230,1068,246"];
	Node25 [label="MappingUtils::findMax", height="0.22", width="1.72", color=black, fillcolor=white, style=filled, URL="$class_mapping_utils.html#afbe1a1e1d2becd66d2c0d5a8ac42b478", tooltip="Iterates over the passed mapping and returns value at the key entry with the highest value...", pos="801,129", rects="739,121,864,137"];
	Node26 [label="ConstMapping::createConst\lIterator", height="0.39", width="1.97", color=black, fillcolor=white, style=filled, URL="$class_const_mapping.html#a5ff3a15fe6d536fa7a26a3fe1ff1b274", tooltip="Returns a pointer of a new Iterator which is able to iterate over this Mapping. ", pos="1008,198", rects="937,184,1080,212"];
	Node27 [label="ConstMappingIterator\l::inRange", height="0.39", width="1.64", color=black, fillcolor=white, style=filled, URL="$class_const_mapping_iterator.html#a4a6348a453418da95978e570fec046fc", tooltip="Returns true if the current position of the iterator is in range of the function. ...", pos="1008,152", rects="949,138,1068,166"];
	Node28 [label="ConstMappingIterator\l::getValue", height="0.39", width="1.64", color=black, fillcolor=white, style=filled, URL="$class_const_mapping_iterator.html#ad4419c259e747867f003d07d62d4259f", tooltip="Returns the value of the Mapping at the current position. ", pos="1008,106", rects="949,92,1068,120"];
	Node29 [label="ConstMappingIterator\l::hasNext", height="0.39", width="1.64", color=black, fillcolor=white, style=filled, URL="$class_const_mapping_iterator.html#ad4bac7233c154b7086c6124d2e21be49", tooltip="Returns true if the iterator has a next value it can iterate to on a call to \"next()\". ", pos="1008,60", rects="949,46,1068,74"];
	Node30 [label="ConstMappingIterator\l::next", height="0.39", width="1.64", color=black, fillcolor=white, style=filled, URL="$class_const_mapping_iterator.html#afdafa6870cd19b3d35674a7bc777585d", tooltip="Iterates to the next position of the Mapping. ", pos="1008,14", rects="949,0,1068,28"];
	Node31 [label="ChannelSenseRequest\l::setResult", height="0.39", width="1.64", color=black, fillcolor=white, style=filled, URL="$class_channel_sense_request.html#a0d14965927d61f2764b658bd3a8c3231", pos="605,200", rects="546,186,664,214"];
	Node32 [label="DeciderToPhyInterface\l::sendControlMsgToMac", height="0.39", width="1.78", color=black, fillcolor=white, style=filled, URL="$class_decider_to_phy_interface.html#a319e413b963f03ff218b0d0024fb66b9", tooltip="Called by the Decider to send a control message to the MACLayer. ", pos="605,146", rects="541,132,670,160"];
	Node33 [label="DeciderToPhyInterface\l::rescheduleMessage", height="0.39", width="1.72", color=black, fillcolor=white, style=filled, URL="$class_decider_to_phy_interface.html#a223fb24be9268abba32e90181fa248b9", tooltip="Tells the PhyLayer to reschedule a message (AirFrame or ControlMessage). ", pos="426,184", rects="364,170,489,198"];
	Node1 -> Node2 [color=midnightblue, style=solid, pos="e,178,250 142,217 159,225 159,236 170,245"];
	Node2 -> Node3 [color=midnightblue, style=solid, pos="e,367,378 314,278 348,306 317,341 350,368 352,370 355,372 358,373"];
	Node2 -> Node4 [color=midnightblue, style=solid, pos="e,350,334 314,278 336,293 328,314 343,329"];
	Node4 -> Node5 [color=midnightblue, style=solid, pos="e,546,377 502,350 520,357 521,366 536,373"];
	Node4 -> Node6 [color=midnightblue, style=solid, pos="e,542,308 502,334 519,329 521,320 533,312"];
	Node4 -> Node7 [color=midnightblue, style=solid, pos="e,546,342 502,342 514,342 525,342 536,342"];
	Node2 -> Node6 [color=midnightblue, style=solid, pos="e,542,297 309,278 311,278 312,279 314,279 331,283 334,285 350,287 411,295 481,297 532,297"];
	Node2 -> Node8 [color=midnightblue, style=solid, pos="e,359,264 314,264 326,264 337,264 349,264"];
	Node2 -> Node9 [color=midnightblue, style=solid, pos="e,360,230 314,250 331,245 333,238 350,232 350,232 350,232 350,232"];
	Node9 -> Node10 [color=midnightblue, style=solid, pos="e,538,237 492,231 495,231 499,232 502,232 511,233 519,234 528,236"];
	Node10 -> Node11 [color=midnightblue, style=solid, pos="e,708,378 672,260 710,294 672,337 700,370"];
	Node11 -> Node12 [color=midnightblue, style=solid, pos="e,949,558 894,394 948,440 878,501 930,548 933,551 936,553 940,555"];
	Node11 -> Node13 [color=midnightblue, style=solid, pos="e,932,516 894,394 936,427 892,474 925,509"];
	Node13 -> Node14 [color=midnightblue, style=solid, pos="e,1134,524 1084,523 1098,523 1111,524 1124,524"];
	Node11 -> Node15 [color=midnightblue, style=solid, pos="e,930,480 894,394 925,417 902,449 923,474"];
	Node15 -> Node16 [color=midnightblue, style=solid, pos="e,1122,486 1086,487 1095,487 1103,487 1112,487"];
	Node11 -> Node17 [color=midnightblue, style=solid, pos="e,939,450 894,394 919,409 906,431 930,446"];
	Node11 -> Node18 [color=midnightblue, style=solid, pos="e,943,415 894,394 912,399 913,408 930,412 931,412 932,413 933,413"];
	Node11 -> Node19 [color=midnightblue, style=solid, pos="e,944,386 894,386 908,386 921,386 934,386"];
	Node11 -> Node20 [color=midnightblue, style=solid, pos="e,958,355 894,378 912,374 913,365 930,360 936,359 942,357 948,356"];
	Node20 -> Node21 [color=midnightblue, style=solid, pos="e,1122,309 1058,352 1068,351 1077,348 1086,344 1104,336 1104,325 1114,315"];
	Node11 -> Node22 [color=midnightblue, style=solid, pos="e,945,319 894,378 919,364 907,342 930,326 932,325 934,324 936,323"];
	Node11 -> Node23 [color=midnightblue, style=solid, pos="e,939,275 894,378 931,350 894,309 930,280 930,280 930,280 930,280"];
	Node11 -> Node24 [color=midnightblue, style=solid, pos="e,948,237 894,378 941,340 884,286 930,246 933,244 935,242 938,241"];
	Node24 -> Node21 [color=midnightblue, style=solid, pos="e,1122,281 1068,240 1074,242 1080,243 1086,246 1104,254 1104,266 1114,276"];
	Node10 -> Node25 [color=midnightblue, style=solid, pos="e,738,125 672,232 707,203 672,165 708,137 714,132 722,129 729,127"];
	Node25 -> Node26 [color=midnightblue, style=solid, pos="e,936,187 864,128 874,129 885,132 894,137 917,149 909,169 927,182"];
	Node25 -> Node27 [color=midnightblue, style=solid, pos="e,948,144 864,134 874,135 884,136 894,137 909,139 924,141 938,143"];
	Node25 -> Node28 [color=midnightblue, style=solid, pos="e,948,115 864,124 874,123 884,122 894,121 909,119 924,118 938,116"];
	Node25 -> Node29 [color=midnightblue, style=solid, pos="e,948,66 864,131 874,129 885,126 894,121 918,109 908,88 930,74 933,73 936,71 939,70"];
	Node25 -> Node30 [color=midnightblue, style=solid, pos="e,948,18 864,133 875,131 885,128 894,121 930,95 896,57 930,28 933,26 936,24 940,22"];
	Node9 -> Node6 [color=midnightblue, style=solid, pos="e,542,285 492,227 495,228 499,230 502,232 524,245 517,264 533,278"];
	Node9 -> Node31 [color=midnightblue, style=solid, pos="e,546,210 492,217 495,217 499,217 502,216 513,214 525,213 537,211"];
	Node9 -> Node32 [color=midnightblue, style=solid, pos="e,540,158 492,221 495,220 499,218 502,216 526,202 516,181 532,165"];
	Node2 -> Node33 [color=midnightblue, style=solid, pos="e,363,192 314,250 338,235 327,214 350,198 351,197 353,196 354,195"];
	Node1 -> Node32 [color=midnightblue, style=solid, pos="e,540,148 142,191 198,182 279,169 350,161 411,155 480,151 531,149"];
}
