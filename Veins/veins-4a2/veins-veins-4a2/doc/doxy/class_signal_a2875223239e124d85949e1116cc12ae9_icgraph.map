digraph "Signal::getReceptionEnd" {
	graph [rankdir=LR];
	node [label="\N", fontname=Helvetica, fontsize=10, shape=record];
	edge [fontname=Helvetica, fontsize=10, labelfontname=Helvetica, labelfontsize=10];
	graph [bb="0,0,1496,494"];
	Node1 [label="Signal::getReceptionEnd", height="0.22", width="1.75", color=black, fillcolor=grey75, style=filled, fontcolor=black, pos="72,193", rects="9,185,136,201"];
	Node2 [label="BaseDecider::calculateRSSIMapping", height="0.22", width="2.56", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a8ca42b7d77c0a1510255ec2a451d06d0", tooltip="Calculates a RSSI-Mapping (or Noise-Strength-Mapping) for a Signal. ", pos="265,341", rects="173,333,358,349"];
	Node3 [label="Decider80211p::calcChannel\lSenseRSSI", height="0.39", width="1.94", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#a09e54d78f37b5e61aa100ea5b9f3083f", tooltip="Calculates the RSSI value for the passed ChannelSenseRequest. ", pos="464,438", rects="394,424,534,452"];
	Node4 [label="BaseDecider::calcChannel\lSenseRSSI", height="0.39", width="1.83", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a12dd419a9e88e0b28f8d4e530e058802", tooltip="Calculates the RSSI value for the passed interval. ", pos="464,392", rects="398,378,531,406"];
	Node5 [label="BaseDecider::answerCSR", height="0.22", width="1.81", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ab8e925001d1f8630338c50f8ec10bb0d", tooltip="Answers the ChannelSenseRequest (CSR) from the passed CSRInfo. ", pos="652,392", rects="587,384,718,400"];
	Node6 [label="BaseDecider::channelState\lChanged", height="0.39", width="1.86", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#add7242168c4bb521c6335f3de590e4b0", tooltip="Checks if the changed channel state enables us to answer any ongoing ChannelSenseRequests. ", pos="849,434", rects="782,420,917,448"];
	Node7 [label="SNRThresholdDecider\l::processNewSignal", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#ace13845f43c5328cea40eb00c59af2b3", tooltip="Processes a new Signal. ", pos="1038,480", rects="978,466,1099,494"];
	Node8 [label="Decider80211p::setChannel\lIdleStatus", height="0.39", width="1.86", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#af06ba4862697730ee05b65f6bf90279b", tooltip="Changes the \"isIdle\"-status to the passed value. ", pos="1038,434", rects="971,420,1105,448"];
	Node9 [label="PhyLayer80211p::handleSelf\lMessage", height="0.39", width="2.00", color=black, fillcolor=white, style=filled, URL="$class_phy_layer80211p.html#a6ab453897d17cd1dab056d03594dbb72", tooltip="Handles self scheduled messages. ", pos="1231,431", rects="1159,417,1303,445"];
	Node10 [label="Decider80211p::processNew\lSignal", height="0.39", width="1.92", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#a2a8f4a380e5a2ba44c36e43cc2033270", tooltip="Processes a new Signal. ", pos="1231,477", rects="1162,463,1301,491"];
	Node11 [label="Decider80211p::processSignalEnd", height="0.22", width="2.31", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#ac39637b3c4cfad57ba0b4518fea264d9", tooltip="Processes a received AirFrame. ", pos="1231,354", rects="1148,346,1314,362"];
	Node12 [label="BaseDecider::setChannelIdle\lStatus", height="0.39", width="2.03", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ae535b44e34061014fe282c36c27b0193", tooltip="Changes the \"isIdle\"-status to the passed value. ", pos="1038,388", rects="965,374,1111,402"];
	Node13 [label="BaseDecider::processNewSignal", height="0.22", width="2.25", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a6a480f87157d0509c0c1fccf94ea9fef", tooltip="Processes a new Signal. ", pos="1231,320", rects="1150,312,1313,328"];
	Node14 [label="BaseDecider::processSignal", height="0.22", width="1.92", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a273892d7b0c9874e4efe3c7755aa7a17", tooltip="Processes an AirFrame given by the PhyLayer. ", pos="1419,354", rects="1350,346,1488,362"];
	Node15 [label="BaseDecider::processSignalEnd", height="0.22", width="2.19", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ab9cfef6c04e12d2524d45e881f341300", tooltip="Processes the end of a received Signal. ", pos="1231,388", rects="1152,380,1311,396"];
	Node16 [label="BaseDecider::handleNewSense\lRequest", height="0.39", width="2.17", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a1dba383c238fba606279ef483b435f78", tooltip="Handles a new incoming ChannelSenseRequest and returns the next (or latest) time to handle the reques...", pos="849,388", rects="771,374,928,402"];
	Node17 [label="BaseDecider::handleChannel\lSenseRequest", height="0.39", width="2.06", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#afd31e5a65d1798d329ace9bdbec25d64", tooltip="This function is called by the PhyLayer to hand over a ChannelSenseRequest. ", pos="1038,342", rects="964,328,1112,356"];
	Node18 [label="BaseDecider::handleSense\lRequestEnd", height="0.39", width="1.83", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a2f175306cc0ae9d2805bc050315a47d8", tooltip="Handles the timeout or end of a ChannelSenseRequest by calculating the ChannelState and returning the...", pos="849,342", rects="783,328,916,356"];
	Node19 [label="SNRThresholdDecider\l::getChannelState", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#a1e6266fe8a4d10ce5443e37321d3bcaa", tooltip="A function that returns information about the channel state. ", pos="652,352", rects="592,338,713,366"];
	Node20 [label="SNRThresholdDecider\l::answerCSR", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#aa7e33361b328274b04ff7bd2d6206e6d", tooltip="Answers the ChannelSenseRequest (CSR) from the passed CSRInfo. ", pos="849,296", rects="789,282,910,310"];
	Node21 [label="BaseDecider::getChannelState", height="0.22", width="2.11", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#af471a55749109aacb99429b409ccb9c1", tooltip="A function that returns information about the channel state. ", pos="652,312", rects="576,304,729,320"];
	Node22 [label="Decider80211p::calculate\lSinrAndSnrMapping", height="0.39", width="1.69", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#aed94d240800692fe3a7c604a6d11e54e", tooltip="Calculates a SNR-Mapping for a Signal. ", pos="464,300", rects="403,286,526,314"];
	Node23 [label="Decider80211p::checkIfSignalOk", height="0.22", width="2.25", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#a01349c12df6c01678d1e25553b754819", tooltip="Checks a mapping against a specific threshold (element-wise). ", pos="652,254", rects="571,246,734,262"];
	Node24 [label="BaseDecider::calculateSnr\lMapping", height="0.39", width="1.83", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#abac709d59f48d292f147919854c002e2", tooltip="Calculates a SNR-Mapping for a Signal. ", pos="464,254", rects="398,240,531,268"];
	Node25 [label="SNRThresholdDecider\l::processSignalEnd", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#a6002f2ee8ffa35ded0162c72f93c9fba", tooltip="Processes a received AirFrame. ", pos="652,196", rects="592,182,713,210"];
	Node26 [label="SNRThresholdDecider\l::canAnswerCSR", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#a0946c7a3e2ee04e2bb1c2dce4b7be7ec", tooltip="Returns point in time when the ChannelSenseRequest of the passed CSRInfo can be answered (e...", pos="464,346", rects="404,332,525,360"];
	Node27 [label="LogNormalShadowing\l::filterSignal", height="0.39", width="1.69", color=black, fillcolor=white, style=filled, URL="$class_log_normal_shadowing.html#abecf1f338dc41facc038dbcd8a863ccd", tooltip="Calculates shadowing loss based on a normal gaussian function. ", pos="265,94", rects="204,80,327,108"];
	Node28 [label="JakesFading::filterSignal", height="0.22", width="1.75", color=black, fillcolor=white, style=filled, URL="$class_jakes_fading.html#ae02fbdbf7ef6db9b78a3416076074190", tooltip="Has to be overriden by every implementation. ", pos="265,54", rects="202,46,329,62"];
	Node29 [label="RadioStateAnalogueModel\l::filterSignal", height="0.39", width="1.97", color=black, fillcolor=white, style=filled, URL="$class_radio_state_analogue_model.html#a5373d679bc62e9da7130d93f531adbbf", tooltip="Filters the AirFrame&#39;s Signal according to the RadioState (passively), i.e. ", pos="265,14", rects="194,0,336,28"];
	Node1 -> Node2 [dir=back, color=midnightblue, style=solid, pos="s,136,201 143,207 176,246 128,296 172,333"];
	Node2 -> Node3 [dir=back, color=midnightblue, style=solid, pos="s,358,349 366,356 385,376 368,403 394,424"];
	Node2 -> Node4 [dir=back, color=midnightblue, style=solid, pos="s,358,349 366,353 378,360 379,370 394,378 395,379 396,379 397,379"];
	Node4 -> Node5 [dir=back, color=midnightblue, style=solid, pos="s,531,392 541,392 556,392 572,392 586,392"];
	Node5 -> Node6 [dir=back, color=midnightblue, style=solid, pos="s,718,396 727,398 729,398 732,399 734,400 752,405 753,413 770,420 774,421 778,422 781,423"];
	Node6 -> Node7 [dir=back, color=midnightblue, style=solid, pos="s,917,444 925,447 926,447 927,448 928,448 945,453 948,460 964,466 968,467 973,469 977,470"];
	Node6 -> Node8 [dir=back, color=midnightblue, style=solid, pos="s,917,434 927,434 942,434 956,434 971,434"];
	Node8 -> Node9 [dir=back, color=midnightblue, style=solid, pos="s,1105,433 1114,433 1128,433 1144,432 1159,432"];
	Node8 -> Node10 [dir=back, color=midnightblue, style=solid, pos="s,1105,446 1114,448 1129,452 1133,458 1148,463 1152,464 1157,465 1161,466"];
	Node8 -> Node11 [dir=back, color=midnightblue, style=solid, pos="s,1105,424 1113,419 1138,401 1123,378 1148,362"];
	Node6 -> Node12 [dir=back, color=midnightblue, style=solid, pos="s,917,423 926,421 926,420 927,420 928,420 945,414 948,407 964,402 964,402 965,402 965,402"];
	Node12 -> Node13 [dir=back, color=midnightblue, style=solid, pos="s,1111,375 1118,369 1133,356 1128,339 1148,328 1148,328 1149,328 1149,327"];
	Node13 -> Node14 [dir=back, color=midnightblue, style=solid, pos="s,1313,328 1322,330 1333,335 1336,341 1350,346"];
	Node12 -> Node15 [dir=back, color=midnightblue, style=solid, pos="s,1111,388 1121,388 1131,388 1141,388 1151,388"];
	Node15 -> Node14 [dir=back, color=midnightblue, style=solid, pos="s,1311,381 1320,378 1332,373 1335,366 1350,362"];
	Node5 -> Node16 [dir=back, color=midnightblue, style=solid, pos="s,718,391 727,391 741,391 756,390 770,390"];
	Node16 -> Node17 [dir=back, color=midnightblue, style=solid, pos="s,928,374 936,370 947,365 951,360 964,356"];
	Node5 -> Node18 [dir=back, color=midnightblue, style=solid, pos="s,718,389 727,387 729,386 732,385 734,384 753,376 752,364 770,356 774,354 778,353 782,351"];
	Node18 -> Node17 [dir=back, color=midnightblue, style=solid, pos="s,916,342 926,342 938,342 951,342 964,342"];
	Node4 -> Node19 [dir=back, color=midnightblue, style=solid, pos="s,531,379 540,376 552,372 556,370 570,366 577,364 584,363 591,361"];
	Node19 -> Node20 [dir=back, color=midnightblue, style=solid, pos="s,713,345 722,342 726,341 730,340 734,338 753,329 752,318 770,310 776,307 782,305 788,303"];
	Node4 -> Node21 [dir=back, color=midnightblue, style=solid, pos="s,531,380 539,374 557,357 547,335 570,320 572,319 574,318 575,317"];
	Node2 -> Node22 [dir=back, color=midnightblue, style=solid, pos="s,358,333 366,330 377,324 380,319 394,314 397,313 399,312 402,311"];
	Node22 -> Node23 [dir=back, color=midnightblue, style=solid, pos="s,526,289 535,286 552,278 552,268 570,262"];
	Node23 -> Node11 [dir=back, color=midnightblue, style=solid, pos="s,734,251 743,251 839,252 994,262 1112,319 1131,327 1130,338 1148,346"];
	Node2 -> Node24 [dir=back, color=midnightblue, style=solid, pos="s,358,333 365,327 383,309 371,285 394,268 395,267 396,266 397,266"];
	Node24 -> Node23 [dir=back, color=midnightblue, style=solid, pos="s,531,254 541,254 551,254 560,254 570,254"];
	Node24 -> Node25 [dir=back, color=midnightblue, style=solid, pos="s,531,241 539,237 553,228 554,217 570,210 577,207 584,205 591,203"];
	Node2 -> Node26 [dir=back, color=midnightblue, style=solid, pos="s,358,343 367,343 379,344 392,344 403,345"];
	Node1 -> Node22 [dir=back, color=midnightblue, style=solid, pos="s,101,201 109,203 118,204 124,205 136,210 152,217 155,223 164,238 166,240 170,249 172,252 241,299 339,306 402,305"];
	Node1 -> Node24 [dir=back, color=midnightblue, style=solid, pos="s,122,201 131,203 135,205 140,206 144,208 158,214 159,221 172,226 247,251 337,256 397,256"];
	Node1 -> Node23 [dir=back, color=midnightblue, style=solid, pos="s,136,199 145,200 154,200 163,201 172,202 333,215 377,197 534,231 551,234 554,240 570,244 573,245 576,245 579,246"];
	Node1 -> Node27 [dir=back, color=midnightblue, style=solid, pos="s,136,185 144,178 163,157 145,129 172,108 181,101 192,97 203,95"];
	Node1 -> Node28 [dir=back, color=midnightblue, style=solid, pos="s,136,185 143,178 174,143 131,97 172,62 181,55 191,52 201,50"];
	Node1 -> Node29 [dir=back, color=midnightblue, style=solid, pos="s,136,185 143,178 184,132 122,75 172,28 178,22 186,18 194,16"];
	Node1 -> Node7 [dir=back, color=midnightblue, style=solid, pos="s,104,201 112,203 124,207 134,210 136,212 183,260 130,306 172,358 262,466 324,480 464,480 464,480 464,480 652,480 767,480 901,48\
0 977,480"];
	Node1 -> Node13 [dir=back, color=midnightblue, style=solid, pos="s,116,185 125,183 216,167 399,136 464,136 464,136 464,136 849,136 980,137 1011,185 1112,266 1132,282 1126,298 1148,311 1149,311 \
1149,312 1150,312"];
	Node1 -> Node25 [dir=back, color=midnightblue, style=solid, pos="s,136,193 145,193 260,194 484,195 591,196"];
}
