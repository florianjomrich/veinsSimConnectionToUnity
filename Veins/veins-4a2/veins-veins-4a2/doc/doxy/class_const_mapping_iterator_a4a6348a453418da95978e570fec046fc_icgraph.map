digraph "ConstMappingIterator::inRange" {
	graph [rankdir=LR];
	node [label="\N", fontname=Helvetica, fontsize=10, shape=record];
	edge [fontname=Helvetica, fontsize=10, labelfontname=Helvetica, labelfontsize=10];
	graph [bb="0,0,1474,330"];
	Node1 [label="ConstMappingIterator\l::inRange", height="0.39", width="1.64", color=black, fillcolor=grey75, style=filled, fontcolor=black, pos="68,154", rects="9,140,128,168"];
	Node2 [label="MappingUtils::applyElement\lWiseOperator", height="0.39", width="2.08", color=black, fillcolor=white, style=filled, URL="$class_mapping_utils.html#a2864c33a93f9ce23403d0c84ca9a19e2", pos="247,304", rects="172,290,322,318"];
	Node3 [label="MappingUtils::createCompatible\lMapping", height="0.39", width="2.31", color=black, fillcolor=white, style=filled, URL="$class_mapping_utils.html#a6d524e08add1a4a02d7e37425783b094", pos="247,258", rects="164,244,330,272"];
	Node4 [label="FilledUpMapping::FilledUp\lMapping", height="0.39", width="1.97", color=black, fillcolor=white, style=filled, URL="$class_filled_up_mapping.html#aa090d76ebccf9be3283594989b528ba7", pos="247,212", rects="176,198,319,226"];
	Node5 [label="MappingUtils::findMax", height="0.22", width="1.72", color=black, fillcolor=white, style=filled, URL="$class_mapping_utils.html#afbe1a1e1d2becd66d2c0d5a8ac42b478", tooltip="Iterates over the passed mapping and returns value at the key entry with the highest value...", pos="247,172", rects="185,164,310,180"];
	Node6 [label="BaseDecider::calcChannel\lSenseRSSI", height="0.39", width="1.83", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a12dd419a9e88e0b28f8d4e530e058802", tooltip="Calculates the RSSI value for the passed interval. ", pos="436,240", rects="370,226,503,254"];
	Node7 [label="BaseDecider::answerCSR", height="0.22", width="1.81", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ab8e925001d1f8630338c50f8ec10bb0d", tooltip="Answers the ChannelSenseRequest (CSR) from the passed CSRInfo. ", pos="619,214", rects="554,206,685,222"];
	Node8 [label="BaseDecider::channelState\lChanged", height="0.39", width="1.86", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#add7242168c4bb521c6335f3de590e4b0", tooltip="Checks if the changed channel state enables us to answer any ongoing ChannelSenseRequests. ", pos="811,260", rects="744,246,879,274"];
	Node9 [label="SNRThresholdDecider\l::processNewSignal", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#ace13845f43c5328cea40eb00c59af2b3", tooltip="Processes a new Signal. ", pos="1008,214", rects="948,200,1069,228"];
	Node10 [label="Decider80211p::setChannel\lIdleStatus", height="0.39", width="1.86", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#af06ba4862697730ee05b65f6bf90279b", tooltip="Changes the \"isIdle\"-status to the passed value. ", pos="1008,260", rects="941,246,1075,274"];
	Node11 [label="Decider80211p::processNew\lSignal", height="0.39", width="1.92", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#a2a8f4a380e5a2ba44c36e43cc2033270", tooltip="Processes a new Signal. ", pos="1209,244", rects="1140,230,1279,258"];
	Node12 [label="Decider80211p::processSignalEnd", height="0.22", width="2.31", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#ac39637b3c4cfad57ba0b4518fea264d9", tooltip="Processes a received AirFrame. ", pos="1209,128", rects="1126,120,1292,136"];
	Node13 [label="PhyLayer80211p::handleSelf\lMessage", height="0.39", width="2.00", color=black, fillcolor=white, style=filled, URL="$class_phy_layer80211p.html#a6ab453897d17cd1dab056d03594dbb72", tooltip="Handles self scheduled messages. ", pos="1209,189", rects="1137,175,1281,203"];
	Node14 [label="BaseDecider::setChannelIdle\lStatus", height="0.39", width="2.03", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ae535b44e34061014fe282c36c27b0193", tooltip="Changes the \"isIdle\"-status to the passed value. ", pos="1008,306", rects="935,292,1081,320"];
	Node15 [label="BaseDecider::processNewSignal", height="0.22", width="2.25", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a6a480f87157d0509c0c1fccf94ea9fef", tooltip="Processes a new Signal. ", pos="1209,322", rects="1128,314,1291,330"];
	Node16 [label="BaseDecider::processSignal", height="0.22", width="1.92", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a273892d7b0c9874e4efe3c7755aa7a17", tooltip="Processes an AirFrame given by the PhyLayer. ", pos="1397,305", rects="1328,297,1466,313"];
	Node17 [label="BaseDecider::processSignalEnd", height="0.22", width="2.19", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ab9cfef6c04e12d2524d45e881f341300", tooltip="Processes the end of a received Signal. ", pos="1209,288", rects="1130,280,1289,296"];
	Node18 [label="BaseDecider::handleNewSense\lRequest", height="0.39", width="2.17", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a1dba383c238fba606279ef483b435f78", tooltip="Handles a new incoming ChannelSenseRequest and returns the next (or latest) time to handle the reques...", pos="811,214", rects="733,200,890,228"];
	Node19 [label="BaseDecider::handleChannel\lSenseRequest", height="0.39", width="2.06", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#afd31e5a65d1798d329ace9bdbec25d64", tooltip="This function is called by the PhyLayer to hand over a ChannelSenseRequest. ", pos="1008,168", rects="934,154,1082,182"];
	Node20 [label="BaseDecider::handleSense\lRequestEnd", height="0.39", width="1.83", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a2f175306cc0ae9d2805bc050315a47d8", tooltip="Handles the timeout or end of a ChannelSenseRequest by calculating the ChannelState and returning the...", pos="811,168", rects="745,154,878,182"];
	Node21 [label="SNRThresholdDecider\l::getChannelState", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#a1e6266fe8a4d10ce5443e37321d3bcaa", tooltip="A function that returns information about the channel state. ", pos="619,297", rects="559,283,680,311"];
	Node22 [label="SNRThresholdDecider\l::answerCSR", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#aa7e33361b328274b04ff7bd2d6206e6d", tooltip="Answers the ChannelSenseRequest (CSR) from the passed CSRInfo. ", pos="811,306", rects="751,292,872,320"];
	Node23 [label="BaseDecider::getChannelState", height="0.22", width="2.11", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#af471a55749109aacb99429b409ccb9c1", tooltip="A function that returns information about the channel state. ", pos="619,248", rects="543,240,696,256"];
	Node24 [label="Decider80211p::calcChannel\lSenseRSSI", height="0.39", width="1.94", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#a09e54d78f37b5e61aa100ea5b9f3083f", tooltip="Calculates the RSSI value for the passed ChannelSenseRequest. ", pos="436,178", rects="366,164,506,192"];
	Node25 [label="MappingUtils::findMin", height="0.22", width="1.69", color=black, fillcolor=white, style=filled, URL="$class_mapping_utils.html#a5d9c4e3dcaddccfa65f21212d0fee2cf", tooltip="Iterates over the passed mapping and returns value at the key entry with the smallest value...", pos="811,128", rects="750,120,873,136"];
	Node26 [label="Decider80211p::checkIfSignalOk", height="0.22", width="2.25", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#a01349c12df6c01678d1e25553b754819", tooltip="Checks a mapping against a specific threshold (element-wise). ", pos="1008,94", rects="927,86,1090,102"];
	Node27 [label="Decider80211p::cca", height="0.22", width="1.33", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#aeba984a7f23ef26ce8b22b0bfef88947", pos="1008,128", rects="960,120,1056,136"];
	Node28 [label="ConstMappingIteratorWrapper\l::inRange", height="0.39", width="2.28", color=black, fillcolor=white, style=filled, URL="$class_const_mapping_iterator_wrapper.html#a4a4bb9cfd56c7013bf5bd4347fef3293", tooltip="Returns true if the current position of the iterator is in range of the function. ...", pos="247,94", rects="165,80,329,108"];
	Node29 [label="MultiDimMappingIterator\l\< Linear \>::inRange", height="0.39", width="1.94", color=black, fillcolor=white, style=filled, URL="$class_multi_dim_mapping_iterator.html#ae4f87a308ad4648d289f1f66d8da772a", tooltip="Returns true if the current position of the iterator is in range of the function. ...", pos="247,48", rects="177,34,318,62"];
	Node30 [label="ConstMapping::print", height="0.22", width="1.53", color=black, fillcolor=white, style=filled, URL="$class_const_mapping.html#a526e8d5b948e9b2ce9d729e66b162e13", tooltip="Prints the Mapping to an output stream. ", pos="247,8", rects="192,0,302,16"];
	Node1 -> Node2 [dir=back, color=midnightblue, style=solid, pos="s,128,168 135,175 165,212 124,255 164,290 166,292 169,294 172,295"];
	Node1 -> Node3 [dir=back, color=midnightblue, style=solid, pos="s,128,168 135,175 154,197 138,224 164,244"];
	Node1 -> Node4 [dir=back, color=midnightblue, style=solid, pos="s,128,168 135,173 147,182 149,191 164,198 168,200 171,201 175,202"];
	Node1 -> Node5 [dir=back, color=midnightblue, style=solid, pos="s,128,160 137,161 146,162 155,163 164,164 171,165 178,165 184,166"];
	Node5 -> Node6 [dir=back, color=midnightblue, style=solid, pos="s,310,173 319,175 323,177 327,178 330,180 353,193 344,213 366,226 367,227 368,227 369,228"];
	Node6 -> Node7 [dir=back, color=midnightblue, style=solid, pos="s,503,228 512,227 522,225 532,224 542,222 546,222 549,221 553,221"];
	Node7 -> Node8 [dir=back, color=midnightblue, style=solid, pos="s,685,219 694,221 694,222 695,222 696,222 715,229 715,239 732,246 736,248 740,249 743,250"];
	Node8 -> Node9 [dir=back, color=midnightblue, style=solid, pos="s,879,250 887,247 888,247 889,246 890,246 907,241 909,234 926,228 933,226 940,224 947,223"];
	Node8 -> Node10 [dir=back, color=midnightblue, style=solid, pos="s,879,260 889,260 906,260 924,260 941,260"];
	Node10 -> Node11 [dir=back, color=midnightblue, style=solid, pos="s,1075,255 1085,254 1103,252 1121,251 1139,250"];
	Node10 -> Node12 [dir=back, color=midnightblue, style=solid, pos="s,1075,255 1083,251 1086,250 1088,248 1090,246 1129,213 1086,169 1126,136"];
	Node10 -> Node13 [dir=back, color=midnightblue, style=solid, pos="s,1075,253 1083,250 1085,249 1088,247 1090,246 1112,234 1105,216 1126,203 1129,201 1133,199 1137,198"];
	Node8 -> Node14 [dir=back, color=midnightblue, style=solid, pos="s,879,271 888,273 888,274 889,274 890,274 907,280 909,287 926,292 929,293 932,294 935,295"];
	Node14 -> Node15 [dir=back, color=midnightblue, style=solid, pos="s,1081,312 1090,313 1102,313 1115,314 1127,315"];
	Node15 -> Node16 [dir=back, color=midnightblue, style=solid, pos="s,1291,315 1300,314 1309,313 1319,313 1328,311"];
	Node14 -> Node17 [dir=back, color=midnightblue, style=solid, pos="s,1081,299 1091,298 1104,297 1116,296 1129,295"];
	Node17 -> Node16 [dir=back, color=midnightblue, style=solid, pos="s,1289,295 1298,296 1308,297 1318,298 1328,299"];
	Node7 -> Node18 [dir=back, color=midnightblue, style=solid, pos="s,685,214 695,214 707,214 720,214 732,214"];
	Node18 -> Node19 [dir=back, color=midnightblue, style=solid, pos="s,890,200 899,197 908,192 913,187 926,182 929,181 931,180 934,180"];
	Node7 -> Node20 [dir=back, color=midnightblue, style=solid, pos="s,685,209 693,207 694,207 695,206 696,206 715,200 715,190 732,182 736,180 740,179 744,178"];
	Node20 -> Node19 [dir=back, color=midnightblue, style=solid, pos="s,878,168 888,168 903,168 918,168 934,168"];
	Node6 -> Node21 [dir=back, color=midnightblue, style=solid, pos="s,503,253 511,257 525,265 526,276 542,283 547,285 553,287 558,289"];
	Node21 -> Node22 [dir=back, color=midnightblue, style=solid, pos="s,680,300 689,300 709,301 731,302 750,303"];
	Node6 -> Node23 [dir=back, color=midnightblue, style=solid, pos="s,503,243 512,243 522,243 532,244 542,245"];
	Node5 -> Node24 [dir=back, color=midnightblue, style=solid, pos="s,310,174 319,174 334,175 351,175 366,176"];
	Node1 -> Node25 [dir=back, color=midnightblue, style=solid, pos="s,128,152 138,152 282,146 612,135 749,130"];
	Node25 -> Node26 [dir=back, color=midnightblue, style=solid, pos="s,873,124 882,122 884,122 887,121 890,120 908,116 909,107 926,102"];
	Node26 -> Node12 [dir=back, color=midnightblue, style=solid, pos="s,1090,102 1099,105 1109,110 1112,117 1126,120"];
	Node25 -> Node27 [dir=back, color=midnightblue, style=solid, pos="s,873,128 883,128 908,128 937,128 960,128"];
	Node27 -> Node11 [dir=back, color=midnightblue, style=solid, pos="s,1056,124 1065,125 1074,127 1082,131 1090,136 1126,164 1092,202 1126,230 1130,233 1135,236 1139,238"];
	Node27 -> Node12 [dir=back, color=midnightblue, style=solid, pos="s,1056,128 1065,128 1084,128 1105,128 1126,128"];
	Node27 -> Node13 [dir=back, color=midnightblue, style=solid, pos="s,1056,127 1064,128 1073,129 1082,132 1090,136 1112,147 1106,164 1126,175 1129,177 1133,179 1137,180"];
	Node1 -> Node28 [dir=back, color=midnightblue, style=solid, pos="s,128,140 136,135 148,127 148,116 164,108 164,108 165,108 165,108"];
	Node1 -> Node29 [dir=back, color=midnightblue, style=solid, pos="s,128,140 135,133 154,111 137,84 164,62 168,59 172,57 176,55"];
	Node1 -> Node30 [dir=back, color=midnightblue, style=solid, pos="s,128,140 135,133 164,95 123,51 164,16 172,10 182,6 192,5"];
}
