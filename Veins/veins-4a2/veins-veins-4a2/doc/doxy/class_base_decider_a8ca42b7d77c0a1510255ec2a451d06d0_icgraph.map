digraph "BaseDecider::calculateRSSIMapping" {
	graph [rankdir=LR];
	node [label="\N", fontname=Helvetica, fontsize=10, shape=record];
	edge [fontname=Helvetica, fontsize=10, labelfontname=Helvetica, labelfontsize=10];
	graph [bb="0,0,1332,355"];
	Node1 [label="BaseDecider::calculateRSSIMapping", height="0.22", width="2.56", color=black, fillcolor=grey75, style=filled, fontcolor=black, pos="101,106", rects="9,98,194,114"];
	Node2 [label="Decider80211p::calcChannel\lSenseRSSI", height="0.39", width="1.94", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#a09e54d78f37b5e61aa100ea5b9f3083f", tooltip="Calculates the RSSI value for the passed ChannelSenseRequest. ", pos="300,198", rects="230,184,370,212"];
	Node3 [label="BaseDecider::calcChannel\lSenseRSSI", height="0.39", width="1.83", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a12dd419a9e88e0b28f8d4e530e058802", tooltip="Calculates the RSSI value for the passed interval. ", pos="300,152", rects="234,138,367,166"];
	Node4 [label="BaseDecider::answerCSR", height="0.22", width="1.81", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ab8e925001d1f8630338c50f8ec10bb0d", tooltip="Answers the ChannelSenseRequest (CSR) from the passed CSRInfo. ", pos="488,213", rects="423,205,554,221"];
	Node5 [label="BaseDecider::channelState\lChanged", height="0.39", width="1.86", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#add7242168c4bb521c6335f3de590e4b0", tooltip="Checks if the changed channel state enables us to answer any ongoing ChannelSenseRequests. ", pos="685,269", rects="618,255,753,283"];
	Node6 [label="BaseDecider::setChannelIdle\lStatus", height="0.39", width="2.03", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ae535b44e34061014fe282c36c27b0193", tooltip="Changes the \"isIdle\"-status to the passed value. ", pos="874,315", rects="801,301,947,329"];
	Node7 [label="BaseDecider::processNewSignal", height="0.22", width="2.25", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a6a480f87157d0509c0c1fccf94ea9fef", tooltip="Processes a new Signal. ", pos="1067,347", rects="986,339,1149,355"];
	Node8 [label="BaseDecider::processSignal", height="0.22", width="1.92", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a273892d7b0c9874e4efe3c7755aa7a17", tooltip="Processes an AirFrame given by the PhyLayer. ", pos="1255,330", rects="1186,322,1324,338"];
	Node9 [label="BaseDecider::processSignalEnd", height="0.22", width="2.19", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ab9cfef6c04e12d2524d45e881f341300", tooltip="Processes the end of a received Signal. ", pos="1067,313", rects="988,305,1147,321"];
	Node10 [label="Decider80211p::setChannel\lIdleStatus", height="0.39", width="1.86", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#af06ba4862697730ee05b65f6bf90279b", tooltip="Changes the \"isIdle\"-status to the passed value. ", pos="874,269", rects="807,255,941,283"];
	Node11 [label="Decider80211p::processNew\lSignal", height="0.39", width="1.92", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#a2a8f4a380e5a2ba44c36e43cc2033270", tooltip="Processes a new Signal. ", pos="1067,270", rects="998,256,1137,284"];
	Node12 [label="Decider80211p::processSignalEnd", height="0.22", width="2.31", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#ac39637b3c4cfad57ba0b4518fea264d9", tooltip="Processes a received AirFrame. ", pos="1067,137", rects="984,129,1150,145"];
	Node13 [label="PhyLayer80211p::handleSelf\lMessage", height="0.39", width="2.00", color=black, fillcolor=white, style=filled, URL="$class_phy_layer80211p.html#a6ab453897d17cd1dab056d03594dbb72", tooltip="Handles self scheduled messages. ", pos="1067,224", rects="995,210,1139,238"];
	Node14 [label="SNRThresholdDecider\l::processNewSignal", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#ace13845f43c5328cea40eb00c59af2b3", tooltip="Processes a new Signal. ", pos="874,223", rects="814,209,935,237"];
	Node15 [label="BaseDecider::handleNewSense\lRequest", height="0.39", width="2.17", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a1dba383c238fba606279ef483b435f78", tooltip="Handles a new incoming ChannelSenseRequest and returns the next (or latest) time to handle the reques...", pos="685,223", rects="607,209,764,237"];
	Node16 [label="BaseDecider::handleChannel\lSenseRequest", height="0.39", width="2.06", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#afd31e5a65d1798d329ace9bdbec25d64", tooltip="This function is called by the PhyLayer to hand over a ChannelSenseRequest. ", pos="874,177", rects="800,163,948,191"];
	Node17 [label="BaseDecider::handleSense\lRequestEnd", height="0.39", width="1.83", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a2f175306cc0ae9d2805bc050315a47d8", tooltip="Handles the timeout or end of a ChannelSenseRequest by calculating the ChannelState and returning the...", pos="685,177", rects="619,163,752,191"];
	Node18 [label="SNRThresholdDecider\l::getChannelState", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#a1e6266fe8a4d10ce5443e37321d3bcaa", tooltip="A function that returns information about the channel state. ", pos="488,163", rects="428,149,549,177"];
	Node19 [label="SNRThresholdDecider\l::answerCSR", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#aa7e33361b328274b04ff7bd2d6206e6d", tooltip="Answers the ChannelSenseRequest (CSR) from the passed CSRInfo. ", pos="685,131", rects="625,117,746,145"];
	Node20 [label="BaseDecider::getChannelState", height="0.22", width="2.11", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#af471a55749109aacb99429b409ccb9c1", tooltip="A function that returns information about the channel state. ", pos="488,123", rects="412,115,565,131"];
	Node21 [label="Decider80211p::calculate\lSinrAndSnrMapping", height="0.39", width="1.69", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#aed94d240800692fe3a7c604a6d11e54e", tooltip="Calculates a SNR-Mapping for a Signal. ", pos="300,106", rects="239,92,362,120"];
	Node22 [label="Decider80211p::checkIfSignalOk", height="0.22", width="2.25", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#a01349c12df6c01678d1e25553b754819", tooltip="Checks a mapping against a specific threshold (element-wise). ", pos="488,89", rects="407,81,570,97"];
	Node23 [label="BaseDecider::calculateSnr\lMapping", height="0.39", width="1.83", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#abac709d59f48d292f147919854c002e2", tooltip="Calculates a SNR-Mapping for a Signal. ", pos="300,60", rects="234,46,367,74"];
	Node24 [label="SNRThresholdDecider\l::processSignalEnd", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#a6002f2ee8ffa35ded0162c72f93c9fba", tooltip="Processes a received AirFrame. ", pos="488,49", rects="428,35,549,63"];
	Node25 [label="SNRThresholdDecider\l::canAnswerCSR", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#a0946c7a3e2ee04e2bb1c2dce4b7be7ec", tooltip="Returns point in time when the ChannelSenseRequest of the passed CSRInfo can be answered (e...", pos="300,14", rects="240,0,361,28"];
	Node1 -> Node2 [dir=back, color=midnightblue, style=solid, pos="s,194,114 201,120 221,139 205,165 230,184"];
	Node1 -> Node3 [dir=back, color=midnightblue, style=solid, pos="s,194,114 202,118 213,124 216,132 230,138 231,138 232,139 233,139"];
	Node3 -> Node4 [dir=back, color=midnightblue, style=solid, pos="s,367,164 375,169 390,181 387,196 406,205 411,207 417,209 422,211"];
	Node4 -> Node5 [dir=back, color=midnightblue, style=solid, pos="s,554,215 562,218 565,219 568,220 570,221 591,230 587,245 606,255 610,257 613,258 617,260"];
	Node5 -> Node6 [dir=back, color=midnightblue, style=solid, pos="s,753,279 761,282 762,282 763,283 764,283 781,288 784,295 800,301 800,301 801,301 801,301"];
	Node6 -> Node7 [dir=back, color=midnightblue, style=solid, pos="s,947,329 956,331 966,333 971,336 984,339 984,339 985,339 985,339"];
	Node7 -> Node8 [dir=back, color=midnightblue, style=solid, pos="s,1149,340 1158,339 1167,338 1177,338 1186,336"];
	Node6 -> Node9 [dir=back, color=midnightblue, style=solid, pos="s,947,314 957,314 967,314 977,314 987,314"];
	Node9 -> Node8 [dir=back, color=midnightblue, style=solid, pos="s,1147,320 1157,321 1167,322 1176,323 1186,324"];
	Node5 -> Node10 [dir=back, color=midnightblue, style=solid, pos="s,753,269 763,269 778,269 792,269 807,269"];
	Node10 -> Node11 [dir=back, color=midnightblue, style=solid, pos="s,941,269 951,269 966,269 982,270 997,270"];
	Node10 -> Node12 [dir=back, color=midnightblue, style=solid, pos="s,941,260 949,254 986,220 944,178 984,145"];
	Node10 -> Node13 [dir=back, color=midnightblue, style=solid, pos="s,941,257 950,254 965,249 969,243 984,238 988,237 991,236 995,235"];
	Node5 -> Node14 [dir=back, color=midnightblue, style=solid, pos="s,753,258 762,256 762,255 763,255 764,255 781,249 784,242 800,237 804,236 809,234 813,233"];
	Node4 -> Node15 [dir=back, color=midnightblue, style=solid, pos="s,554,216 564,217 578,217 592,218 606,219"];
	Node15 -> Node16 [dir=back, color=midnightblue, style=solid, pos="s,764,209 772,206 783,201 787,196 800,191"];
	Node4 -> Node17 [dir=back, color=midnightblue, style=solid, pos="s,554,208 563,206 565,206 568,205 570,205 587,202 590,196 606,191 610,190 614,189 618,188"];
	Node17 -> Node16 [dir=back, color=midnightblue, style=solid, pos="s,752,177 762,177 774,177 787,177 800,177"];
	Node3 -> Node18 [dir=back, color=midnightblue, style=solid, pos="s,367,156 375,156 393,157 411,158 427,159"];
	Node18 -> Node19 [dir=back, color=midnightblue, style=solid, pos="s,549,153 558,152 579,148 603,145 624,141"];
	Node3 -> Node20 [dir=back, color=midnightblue, style=solid, pos="s,367,139 376,137 392,134 404,131 406,131 408,131 409,131 411,130"];
	Node1 -> Node21 [dir=back, color=midnightblue, style=solid, pos="s,194,106 203,106 215,106 227,106 238,106"];
	Node21 -> Node22 [dir=back, color=midnightblue, style=solid, pos="s,362,100 372,99 383,98 394,97 406,96"];
	Node22 -> Node12 [dir=back, color=midnightblue, style=solid, pos="s,570,94 579,95 633,99 702,103 764,108 775,109 898,121 984,129"];
	Node1 -> Node23 [dir=back, color=midnightblue, style=solid, pos="s,194,98 203,94 214,88 216,81 230,74 231,74 232,73 233,73"];
	Node23 -> Node22 [dir=back, color=midnightblue, style=solid, pos="s,367,74 376,76 392,79 404,81 406,81"];
	Node23 -> Node24 [dir=back, color=midnightblue, style=solid, pos="s,367,56 376,56 393,55 411,54 427,53"];
	Node1 -> Node25 [dir=back, color=midnightblue, style=solid, pos="s,194,98 202,92 220,73 206,48 230,28 233,26 236,24 239,22"];
}
