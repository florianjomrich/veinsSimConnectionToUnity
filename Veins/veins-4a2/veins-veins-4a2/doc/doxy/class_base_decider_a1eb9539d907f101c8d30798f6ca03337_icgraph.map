digraph "BaseDecider::getChannelInfo" {
	graph [rankdir=LR];
	node [label="\N", fontname=Helvetica, fontsize=10, shape=record];
	edge [fontname=Helvetica, fontsize=10, labelfontname=Helvetica, labelfontsize=10];
	graph [bb="0,0,1520,320"];
	Node1 [label="BaseDecider::getChannelInfo", height="0.22", width="2.08", color=black, fillcolor=grey75, style=filled, fontcolor=black, pos="84,219", rects="9,211,160,227"];
	Node2 [label="BaseDecider::calculateRSSIMapping", height="0.22", width="2.56", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a8ca42b7d77c0a1510255ec2a451d06d0", tooltip="Calculates a RSSI-Mapping (or Noise-Strength-Mapping) for a Signal. ", pos="289,129", rects="197,121,382,137"];
	Node3 [label="Decider80211p::calcChannel\lSenseRSSI", height="0.39", width="1.94", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#a09e54d78f37b5e61aa100ea5b9f3083f", tooltip="Calculates the RSSI value for the passed ChannelSenseRequest. ", pos="488,60", rects="418,46,558,74"];
	Node4 [label="BaseDecider::calcChannel\lSenseRSSI", height="0.39", width="1.83", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a12dd419a9e88e0b28f8d4e530e058802", tooltip="Calculates the RSSI value for the passed interval. ", pos="488,198", rects="422,184,555,212"];
	Node5 [label="BaseDecider::answerCSR", height="0.22", width="1.81", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ab8e925001d1f8630338c50f8ec10bb0d", tooltip="Answers the ChannelSenseRequest (CSR) from the passed CSRInfo. ", pos="676,198", rects="611,190,742,206"];
	Node6 [label="BaseDecider::channelState\lChanged", height="0.39", width="1.86", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#add7242168c4bb521c6335f3de590e4b0", tooltip="Checks if the changed channel state enables us to answer any ongoing ChannelSenseRequests. ", pos="873,198", rects="806,184,941,212"];
	Node7 [label="SNRThresholdDecider\l::processNewSignal", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#ace13845f43c5328cea40eb00c59af2b3", tooltip="Processes a new Signal. ", pos="1062,198", rects="1002,184,1123,212"];
	Node8 [label="Decider80211p::setChannel\lIdleStatus", height="0.39", width="1.86", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#af06ba4862697730ee05b65f6bf90279b", tooltip="Changes the \"isIdle\"-status to the passed value. ", pos="1062,152", rects="995,138,1129,166"];
	Node9 [label="Decider80211p::processNew\lSignal", height="0.39", width="1.92", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#a2a8f4a380e5a2ba44c36e43cc2033270", tooltip="Processes a new Signal. ", pos="1255,192", rects="1186,178,1325,206"];
	Node10 [label="Decider80211p::processSignalEnd", height="0.22", width="2.31", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#ac39637b3c4cfad57ba0b4518fea264d9", tooltip="Processes a received AirFrame. ", pos="1255,152", rects="1172,144,1338,160"];
	Node11 [label="PhyLayer80211p::handleSelf\lMessage", height="0.39", width="2.00", color=black, fillcolor=white, style=filled, URL="$class_phy_layer80211p.html#a6ab453897d17cd1dab056d03594dbb72", tooltip="Handles self scheduled messages. ", pos="1255,238", rects="1183,224,1327,252"];
	Node12 [label="BaseDecider::setChannelIdle\lStatus", height="0.39", width="2.03", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ae535b44e34061014fe282c36c27b0193", tooltip="Changes the \"isIdle\"-status to the passed value. ", pos="1062,278", rects="989,264,1135,292"];
	Node13 [label="BaseDecider::processNewSignal", height="0.22", width="2.25", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a6a480f87157d0509c0c1fccf94ea9fef", tooltip="Processes a new Signal. ", pos="1255,312", rects="1174,304,1337,320"];
	Node14 [label="BaseDecider::processSignal", height="0.22", width="1.92", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a273892d7b0c9874e4efe3c7755aa7a17", tooltip="Processes an AirFrame given by the PhyLayer. ", pos="1443,295", rects="1374,287,1512,303"];
	Node15 [label="BaseDecider::processSignalEnd", height="0.22", width="2.19", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ab9cfef6c04e12d2524d45e881f341300", tooltip="Processes the end of a received Signal. ", pos="1255,278", rects="1176,270,1335,286"];
	Node16 [label="BaseDecider::handleNewSense\lRequest", height="0.39", width="2.17", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a1dba383c238fba606279ef483b435f78", tooltip="Handles a new incoming ChannelSenseRequest and returns the next (or latest) time to handle the reques...", pos="873,106", rects="795,92,952,120"];
	Node17 [label="BaseDecider::handleChannel\lSenseRequest", height="0.39", width="2.06", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#afd31e5a65d1798d329ace9bdbec25d64", tooltip="This function is called by the PhyLayer to hand over a ChannelSenseRequest. ", pos="1062,106", rects="988,92,1136,120"];
	Node18 [label="BaseDecider::handleSense\lRequestEnd", height="0.39", width="1.83", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a2f175306cc0ae9d2805bc050315a47d8", tooltip="Handles the timeout or end of a ChannelSenseRequest by calculating the ChannelState and returning the...", pos="873,152", rects="807,138,940,166"];
	Node19 [label="SNRThresholdDecider\l::getChannelState", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#a1e6266fe8a4d10ce5443e37321d3bcaa", tooltip="A function that returns information about the channel state. ", pos="676,241", rects="616,227,737,255"];
	Node20 [label="SNRThresholdDecider\l::answerCSR", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#aa7e33361b328274b04ff7bd2d6206e6d", tooltip="Answers the ChannelSenseRequest (CSR) from the passed CSRInfo. ", pos="873,244", rects="813,230,934,258"];
	Node21 [label="BaseDecider::getChannelState", height="0.22", width="2.11", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#af471a55749109aacb99429b409ccb9c1", tooltip="A function that returns information about the channel state. ", pos="676,164", rects="600,156,753,172"];
	Node22 [label="Decider80211p::calculate\lSinrAndSnrMapping", height="0.39", width="1.69", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#aed94d240800692fe3a7c604a6d11e54e", tooltip="Calculates a SNR-Mapping for a Signal. ", pos="488,14", rects="427,0,550,28"];
	Node23 [label="Decider80211p::checkIfSignalOk", height="0.22", width="2.25", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#a01349c12df6c01678d1e25553b754819", tooltip="Checks a mapping against a specific threshold (element-wise). ", pos="676,64", rects="595,56,758,72"];
	Node24 [label="BaseDecider::calculateSnr\lMapping", height="0.39", width="1.83", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#abac709d59f48d292f147919854c002e2", tooltip="Calculates a SNR-Mapping for a Signal. ", pos="488,152", rects="422,138,555,166"];
	Node25 [label="SNRThresholdDecider\l::processSignalEnd", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#a6002f2ee8ffa35ded0162c72f93c9fba", tooltip="Processes a received AirFrame. ", pos="676,124", rects="616,110,737,138"];
	Node26 [label="SNRThresholdDecider\l::canAnswerCSR", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#a0946c7a3e2ee04e2bb1c2dce4b7be7ec", tooltip="Returns point in time when the ChannelSenseRequest of the passed CSRInfo can be answered (e...", pos="488,106", rects="428,92,549,120"];
	Node27 [label="Decider80211p::cca", height="0.22", width="1.33", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#aeba984a7f23ef26ce8b22b0bfef88947", pos="1062,238", rects="1014,230,1110,246"];
	Node1 -> Node2 [dir=back, color=midnightblue, style=solid, pos="s,160,211 167,205 186,185 169,156 196,137"];
	Node2 -> Node3 [dir=back, color=midnightblue, style=solid, pos="s,382,121 390,116 404,104 399,86 417,74"];
	Node2 -> Node4 [dir=back, color=midnightblue, style=solid, pos="s,382,137 390,143 404,155 399,173 418,184 419,185 420,185 421,186"];
	Node4 -> Node5 [dir=back, color=midnightblue, style=solid, pos="s,555,198 565,198 580,198 596,198 610,198"];
	Node5 -> Node6 [dir=back, color=midnightblue, style=solid, pos="s,742,198 752,198 769,198 788,198 805,198"];
	Node6 -> Node7 [dir=back, color=midnightblue, style=solid, pos="s,941,198 950,198 967,198 985,198 1001,198"];
	Node6 -> Node8 [dir=back, color=midnightblue, style=solid, pos="s,941,188 949,185 950,185 951,184 952,184 969,179 972,172 988,166 990,165 993,165 995,164"];
	Node8 -> Node9 [dir=back, color=midnightblue, style=solid, pos="s,1129,164 1138,167 1153,171 1157,174 1172,178 1176,179 1181,180 1185,181"];
	Node8 -> Node10 [dir=back, color=midnightblue, style=solid, pos="s,1129,152 1139,152 1150,152 1161,152 1172,152"];
	Node8 -> Node11 [dir=back, color=midnightblue, style=solid, pos="s,1129,162 1137,167 1162,185 1147,208 1172,224 1175,226 1179,228 1183,229"];
	Node6 -> Node12 [dir=back, color=midnightblue, style=solid, pos="s,941,206 949,210 950,211 951,211 952,212 976,227 965,248 988,264 988,264 988,264 989,264"];
	Node12 -> Node13 [dir=back, color=midnightblue, style=solid, pos="s,1135,292 1144,294 1154,297 1159,301 1172,304 1172,304 1173,304 1173,304"];
	Node13 -> Node14 [dir=back, color=midnightblue, style=solid, pos="s,1337,305 1346,304 1355,303 1365,303 1374,301"];
	Node12 -> Node15 [dir=back, color=midnightblue, style=solid, pos="s,1135,278 1145,278 1155,278 1165,278 1175,278"];
	Node15 -> Node14 [dir=back, color=midnightblue, style=solid, pos="s,1335,285 1345,286 1355,287 1364,288 1374,289"];
	Node5 -> Node16 [dir=back, color=midnightblue, style=solid, pos="s,742,198 750,194 753,193 756,191 758,190 787,171 766,141 794,120"];
	Node16 -> Node17 [dir=back, color=midnightblue, style=solid, pos="s,952,106 962,106 971,106 979,106 988,106"];
	Node5 -> Node18 [dir=back, color=midnightblue, style=solid, pos="s,742,195 751,193 753,192 756,191 758,190 777,184 777,174 794,166 798,164 802,163 806,162"];
	Node18 -> Node17 [dir=back, color=midnightblue, style=solid, pos="s,940,142 948,139 950,139 951,138 952,138 969,133 972,126 988,120"];
	Node4 -> Node19 [dir=back, color=midnightblue, style=solid, pos="s,555,211 564,214 576,218 580,223 594,227 601,229 608,231 615,232"];
	Node19 -> Node20 [dir=back, color=midnightblue, style=solid, pos="s,737,242 747,242 768,242 791,243 812,243"];
	Node4 -> Node21 [dir=back, color=midnightblue, style=solid, pos="s,555,185 564,183 576,179 580,176 594,172 596,172 597,171 599,171"];
	Node2 -> Node22 [dir=back, color=midnightblue, style=solid, pos="s,382,121 389,114 413,89 388,55 418,28 421,26 423,24 426,23"];
	Node22 -> Node23 [dir=back, color=midnightblue, style=solid, pos="s,550,25 559,28 577,37 576,49 594,56"];
	Node23 -> Node10 [dir=back, color=midnightblue, style=solid, pos="s,758,59 768,58 883,52 1076,48 1136,83 1163,99 1147,126 1172,142 1173,143 1174,143 1175,144"];
	Node2 -> Node24 [dir=back, color=midnightblue, style=solid, pos="s,382,137 391,138 401,140 411,140 421,142"];
	Node24 -> Node23 [dir=back, color=midnightblue, style=solid, pos="s,555,140 563,134 583,115 569,90 594,72"];
	Node24 -> Node25 [dir=back, color=midnightblue, style=solid, pos="s,555,142 564,141 581,138 599,136 615,133"];
	Node2 -> Node26 [dir=back, color=midnightblue, style=solid, pos="s,382,121 390,120 403,118 415,117 427,115"];
	Node1 -> Node27 [dir=back, color=midnightblue, style=solid, pos="s,160,227 169,228 308,249 343,286 488,286 488,286 488,286 676,286 799,286 835,303 952,267 970,261 971,251 988,246 996,243 1005,2\
41 1014,240"];
	Node27 -> Node9 [dir=back, color=midnightblue, style=solid, pos="s,1110,236 1118,235 1124,234 1130,232 1136,230 1155,223 1155,213 1172,206 1176,204 1181,203 1185,202"];
	Node27 -> Node10 [dir=back, color=midnightblue, style=solid, pos="s,1110,239 1119,237 1125,236 1131,233 1136,230 1165,211 1144,180 1172,160"];
	Node27 -> Node11 [dir=back, color=midnightblue, style=solid, pos="s,1110,238 1119,238 1139,238 1161,238 1183,238"];
}
