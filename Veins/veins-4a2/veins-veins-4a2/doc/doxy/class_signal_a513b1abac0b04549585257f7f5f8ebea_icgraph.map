digraph "Signal::getReceivingPower" {
	graph [rankdir=LR];
	node [label="\N", fontname=Helvetica, fontsize=10, shape=record];
	edge [fontname=Helvetica, fontsize=10, labelfontname=Helvetica, labelfontsize=10];
	graph [bb="0,0,1506,374"];
	Node1 [label="Signal::getReceivingPower", height="0.22", width="1.92", color=black, fillcolor=grey75, style=filled, fontcolor=black, pos="77,159", rects="8,151,146,167"];
	Node2 [label="Decider80211p::calculate\lNoiseRSSIMapping", height="0.39", width="1.69", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#af3174316d16de21ba92ee86ec5cb50cb", tooltip="Calculates a RSSI-Mapping (or Noise-Strength-Mapping) for a Signal. ", pos="275,138", rects="214,124,337,152"];
	Node3 [label="Decider80211p::calculate\lSinrAndSnrMapping", height="0.39", width="1.69", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#aed94d240800692fe3a7c604a6d11e54e", tooltip="Calculates a SNR-Mapping for a Signal. ", pos="474,138", rects="413,124,536,152"];
	Node4 [label="Decider80211p::checkIfSignalOk", height="0.22", width="2.25", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#a01349c12df6c01678d1e25553b754819", tooltip="Checks a mapping against a specific threshold (element-wise). ", pos="662,143", rects="581,135,744,151"];
	Node5 [label="Decider80211p::processSignalEnd", height="0.22", width="2.31", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#ac39637b3c4cfad57ba0b4518fea264d9", tooltip="Processes a received AirFrame. ", pos="1241,106", rects="1158,98,1324,114"];
	Node6 [label="BaseDecider::calculateRSSIMapping", height="0.22", width="2.56", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a8ca42b7d77c0a1510255ec2a451d06d0", tooltip="Calculates a RSSI-Mapping (or Noise-Strength-Mapping) for a Signal. ", pos="275,223", rects="183,215,368,231"];
	Node7 [label="Decider80211p::calcChannel\lSenseRSSI", height="0.39", width="1.94", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#a09e54d78f37b5e61aa100ea5b9f3083f", tooltip="Calculates the RSSI value for the passed ChannelSenseRequest. ", pos="474,230", rects="404,216,544,244"];
	Node8 [label="BaseDecider::calcChannel\lSenseRSSI", height="0.39", width="1.83", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a12dd419a9e88e0b28f8d4e530e058802", tooltip="Calculates the RSSI value for the passed interval. ", pos="474,322", rects="408,308,541,336"];
	Node9 [label="BaseDecider::answerCSR", height="0.22", width="1.81", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ab8e925001d1f8630338c50f8ec10bb0d", tooltip="Answers the ChannelSenseRequest (CSR) from the passed CSRInfo. ", pos="662,248", rects="597,240,728,256"];
	Node10 [label="BaseDecider::channelState\lChanged", height="0.39", width="1.86", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#add7242168c4bb521c6335f3de590e4b0", tooltip="Checks if the changed channel state enables us to answer any ongoing ChannelSenseRequests. ", pos="859,106", rects="792,92,927,120"];
	Node11 [label="SNRThresholdDecider\l::processNewSignal", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#ace13845f43c5328cea40eb00c59af2b3", tooltip="Processes a new Signal. ", pos="1048,60", rects="988,46,1109,74"];
	Node12 [label="Decider80211p::setChannel\lIdleStatus", height="0.39", width="1.86", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#af06ba4862697730ee05b65f6bf90279b", tooltip="Changes the \"isIdle\"-status to the passed value. ", pos="1048,106", rects="981,92,1115,120"];
	Node13 [label="PhyLayer80211p::handleSelf\lMessage", height="0.39", width="2.00", color=black, fillcolor=white, style=filled, URL="$class_phy_layer80211p.html#a6ab453897d17cd1dab056d03594dbb72", tooltip="Handles self scheduled messages. ", pos="1241,66", rects="1169,52,1313,80"];
	Node14 [label="Decider80211p::processNew\lSignal", height="0.39", width="1.92", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#a2a8f4a380e5a2ba44c36e43cc2033270", tooltip="Processes a new Signal. ", pos="1241,20", rects="1172,6,1311,34"];
	Node15 [label="BaseDecider::setChannelIdle\lStatus", height="0.39", width="2.03", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ae535b44e34061014fe282c36c27b0193", tooltip="Changes the \"isIdle\"-status to the passed value. ", pos="1048,196", rects="975,182,1121,210"];
	Node16 [label="BaseDecider::processNewSignal", height="0.22", width="2.25", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a6a480f87157d0509c0c1fccf94ea9fef", tooltip="Processes a new Signal. ", pos="1241,230", rects="1160,222,1323,238"];
	Node17 [label="BaseDecider::processSignal", height="0.22", width="1.92", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a273892d7b0c9874e4efe3c7755aa7a17", tooltip="Processes an AirFrame given by the PhyLayer. ", pos="1429,213", rects="1360,205,1498,221"];
	Node18 [label="BaseDecider::processSignalEnd", height="0.22", width="2.19", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ab9cfef6c04e12d2524d45e881f341300", tooltip="Processes the end of a received Signal. ", pos="1241,196", rects="1162,188,1321,204"];
	Node19 [label="BaseDecider::handleNewSense\lRequest", height="0.39", width="2.17", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a1dba383c238fba606279ef483b435f78", tooltip="Handles a new incoming ChannelSenseRequest and returns the next (or latest) time to handle the reques...", pos="859,262", rects="781,248,938,276"];
	Node20 [label="BaseDecider::handleChannel\lSenseRequest", height="0.39", width="2.06", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#afd31e5a65d1798d329ace9bdbec25d64", tooltip="This function is called by the PhyLayer to hand over a ChannelSenseRequest. ", pos="1048,249", rects="974,235,1122,263"];
	Node21 [label="BaseDecider::handleSense\lRequestEnd", height="0.39", width="1.83", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a2f175306cc0ae9d2805bc050315a47d8", tooltip="Handles the timeout or end of a ChannelSenseRequest by calculating the ChannelState and returning the...", pos="859,216", rects="793,202,926,230"];
	Node22 [label="SNRThresholdDecider\l::getChannelState", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#a1e6266fe8a4d10ce5443e37321d3bcaa", tooltip="A function that returns information about the channel state. ", pos="662,322", rects="602,308,723,336"];
	Node23 [label="SNRThresholdDecider\l::answerCSR", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#aa7e33361b328274b04ff7bd2d6206e6d", tooltip="Answers the ChannelSenseRequest (CSR) from the passed CSRInfo. ", pos="859,322", rects="799,308,920,336"];
	Node24 [label="BaseDecider::getChannelState", height="0.22", width="2.11", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#af471a55749109aacb99429b409ccb9c1", tooltip="A function that returns information about the channel state. ", pos="662,282", rects="586,274,739,290"];
	Node25 [label="BaseDecider::calculateSnr\lMapping", height="0.39", width="1.83", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#abac709d59f48d292f147919854c002e2", tooltip="Calculates a SNR-Mapping for a Signal. ", pos="474,276", rects="408,262,541,290"];
	Node26 [label="SNRThresholdDecider\l::processSignalEnd", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#a6002f2ee8ffa35ded0162c72f93c9fba", tooltip="Processes a received AirFrame. ", pos="662,208", rects="602,194,723,222"];
	Node27 [label="SNRThresholdDecider\l::canAnswerCSR", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#a0946c7a3e2ee04e2bb1c2dce4b7be7ec", tooltip="Returns point in time when the ChannelSenseRequest of the passed CSRInfo can be answered (e...", pos="474,184", rects="414,170,535,198"];
	Node28 [label="Decider80211p::cca", height="0.22", width="1.33", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#aeba984a7f23ef26ce8b22b0bfef88947", pos="1048,20", rects="1000,12,1096,28"];
	Node1 -> Node2 [dir=back, color=midnightblue, style=solid, pos="s,146,152 155,151 174,149 195,147 213,145"];
	Node2 -> Node3 [dir=back, color=midnightblue, style=solid, pos="s,337,138 347,138 368,138 391,138 412,138"];
	Node3 -> Node4 [dir=back, color=midnightblue, style=solid, pos="s,536,140 546,140 557,140 568,141 580,141"];
	Node4 -> Node5 [dir=back, color=midnightblue, style=solid, pos="s,744,148 754,148 847,152 997,153 1122,129 1139,126 1142,120 1158,116 1161,115 1164,115 1168,114"];
	Node1 -> Node6 [dir=back, color=midnightblue, style=solid, pos="s,146,167 154,172 168,185 162,204 182,215"];
	Node6 -> Node7 [dir=back, color=midnightblue, style=solid, pos="s,368,226 378,226 387,226 395,227 404,227"];
	Node6 -> Node8 [dir=back, color=midnightblue, style=solid, pos="s,368,231 376,238 395,258 378,286 404,308 405,309 406,310 407,310"];
	Node8 -> Node9 [dir=back, color=midnightblue, style=solid, pos="s,541,310 549,304 566,289 558,269 580,256 585,253 591,251 596,249"];
	Node9 -> Node10 [dir=back, color=midnightblue, style=solid, pos="s,728,249 736,245 739,244 741,242 744,240 788,204 739,157 780,120 783,117 787,115 791,113"];
	Node10 -> Node11 [dir=back, color=midnightblue, style=solid, pos="s,927,96 935,93 936,93 937,92 938,92 955,87 958,80 974,74 978,73 983,71 987,70"];
	Node10 -> Node12 [dir=back, color=midnightblue, style=solid, pos="s,927,106 937,106 952,106 966,106 981,106"];
	Node12 -> Node13 [dir=back, color=midnightblue, style=solid, pos="s,1115,94 1124,92 1139,88 1143,85 1158,80 1161,79 1165,78 1169,78"];
	Node12 -> Node14 [dir=back, color=midnightblue, style=solid, pos="s,1115,96 1123,91 1147,74 1133,51 1158,34 1162,31 1167,29 1171,27"];
	Node12 -> Node5 [dir=back, color=midnightblue, style=solid, pos="s,1115,106 1125,106 1136,106 1147,106 1158,106"];
	Node10 -> Node15 [dir=back, color=midnightblue, style=solid, pos="s,927,114 935,118 936,119 937,119 938,120 965,139 948,163 974,182 974,182 975,182 975,183"];
	Node15 -> Node16 [dir=back, color=midnightblue, style=solid, pos="s,1121,210 1130,212 1140,215 1145,219 1158,222 1158,222 1159,222 1159,222"];
	Node16 -> Node17 [dir=back, color=midnightblue, style=solid, pos="s,1323,223 1332,222 1341,221 1351,221 1360,219"];
	Node15 -> Node18 [dir=back, color=midnightblue, style=solid, pos="s,1121,196 1131,196 1141,196 1151,196 1161,196"];
	Node18 -> Node17 [dir=back, color=midnightblue, style=solid, pos="s,1321,203 1331,204 1341,205 1350,206 1360,207"];
	Node9 -> Node19 [dir=back, color=midnightblue, style=solid, pos="s,728,253 738,254 752,254 766,255 780,257"];
	Node19 -> Node20 [dir=back, color=midnightblue, style=solid, pos="s,938,257 947,256 956,256 965,255 974,254"];
	Node9 -> Node21 [dir=back, color=midnightblue, style=solid, pos="s,728,242 737,241 739,241 742,240 744,240 761,236 764,233 780,230 784,229 788,228 792,227"];
	Node21 -> Node20 [dir=back, color=midnightblue, style=solid, pos="s,926,228 935,230 947,232 961,234 974,236"];
	Node8 -> Node22 [dir=back, color=midnightblue, style=solid, pos="s,541,322 550,322 567,322 585,322 601,322"];
	Node22 -> Node23 [dir=back, color=midnightblue, style=solid, pos="s,723,322 733,322 754,322 777,322 798,322"];
	Node8 -> Node24 [dir=back, color=midnightblue, style=solid, pos="s,541,309 550,306 562,300 565,294 580,290 582,289 583,289 585,289"];
	Node6 -> Node3 [dir=back, color=midnightblue, style=solid, pos="s,368,215 375,209 393,192 381,168 404,152 407,150 409,149 412,147"];
	Node6 -> Node25 [dir=back, color=midnightblue, style=solid, pos="s,368,231 377,236 388,244 389,254 404,262 405,263 406,263 407,263"];
	Node25 -> Node4 [dir=back, color=midnightblue, style=solid, pos="s,541,265 548,258 580,224 541,182 580,151"];
	Node25 -> Node26 [dir=back, color=midnightblue, style=solid, pos="s,541,264 549,259 564,247 562,232 580,222 587,218 594,216 601,214"];
	Node6 -> Node27 [dir=back, color=midnightblue, style=solid, pos="s,368,215 377,212 387,207 391,202 404,198 407,197 410,196 413,195"];
	Node1 -> Node3 [dir=back, color=midnightblue, style=solid, pos="s,146,165 156,166 214,169 297,171 368,161 386,158 390,154 406,150 408,149 410,149 412,148"];
	Node1 -> Node25 [dir=back, color=midnightblue, style=solid, pos="s,119,167 128,169 136,172 143,174 146,177 172,196 156,222 182,240 249,284 344,288 407,284"];
	Node1 -> Node28 [dir=back, color=midnightblue, style=solid, pos="s,114,151 122,149 133,145 142,142 146,138 180,106 145,68 182,39 235,0 409,20 474,20 474,20 474,20 662,20 784,21 927,20 1000,20"];
	Node28 -> Node13 [dir=back, color=midnightblue, style=solid, pos="s,1096,22 1104,23 1110,24 1116,26 1122,28 1141,35 1141,45 1158,52 1161,53 1165,55 1169,56"];
	Node28 -> Node14 [dir=back, color=midnightblue, style=solid, pos="s,1096,20 1105,20 1126,20 1149,20 1171,20"];
	Node28 -> Node5 [dir=back, color=midnightblue, style=solid, pos="s,1096,19 1105,21 1111,22 1117,25 1122,28 1151,48 1130,79 1158,98"];
	Node1 -> Node4 [dir=back, color=midnightblue, style=solid, pos="s,123,151 132,148 137,147 142,145 146,143 165,135 163,122 182,115 335,63 388,80 544,115 562,119 564,127 580,132 584,133 588,134 \
592,135"];
	Node1 -> Node11 [dir=back, color=midnightblue, style=solid, pos="s,113,151 122,149 132,145 142,142 146,139 171,121 156,96 182,79 293,11 344,59 474,58 474,58 474,58 662,58 777,59 911,59 987,60"];
	Node1 -> Node16 [dir=back, color=midnightblue, style=solid, pos="s,116,167 125,169 134,172 143,176 146,179 163,194 166,258 182,274 281,367 339,364 474,364 474,364 474,364 859,364 935,364 1121,2\
73 1122,272 1141,260 1138,247 1158,238 1158,238 1159,238 1159,237"];
}
