digraph "ChannelSenseRequest::setResult" {
	graph [rankdir=LR];
	node [label="\N", fontname=Helvetica, fontsize=10, shape=record];
	edge [fontname=Helvetica, fontsize=10, labelfontname=Helvetica, labelfontsize=10];
	graph [bb="0,0,1056,194"];
	Node1 [label="ChannelSenseRequest\l::setResult", height="0.39", width="1.64", color=black, fillcolor=grey75, style=filled, fontcolor=black, pos="67,80", rects="8,66,126,94"];
	Node2 [label="SNRThresholdDecider\l::answerCSR", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#aa7e33361b328274b04ff7bd2d6206e6d", tooltip="Answers the ChannelSenseRequest (CSR) from the passed CSRInfo. ", pos="228,100", rects="168,86,289,114"];
	Node3 [label="BaseDecider::answerCSR", height="0.22", width="1.81", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ab8e925001d1f8630338c50f8ec10bb0d", tooltip="Answers the ChannelSenseRequest (CSR) from the passed CSRInfo. ", pos="228,60", rects="163,52,294,68"];
	Node4 [label="BaseDecider::channelState\lChanged", height="0.39", width="1.86", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#add7242168c4bb521c6335f3de590e4b0", tooltip="Checks if the changed channel state enables us to answer any ongoing ChannelSenseRequests. ", pos="409,106", rects="342,92,477,120"];
	Node5 [label="SNRThresholdDecider\l::processNewSignal", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#ace13845f43c5328cea40eb00c59af2b3", tooltip="Processes a new Signal. ", pos="598,152", rects="538,138,659,166"];
	Node6 [label="Decider80211p::setChannel\lIdleStatus", height="0.39", width="1.86", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#af06ba4862697730ee05b65f6bf90279b", tooltip="Changes the \"isIdle\"-status to the passed value. ", pos="598,106", rects="531,92,665,120"];
	Node7 [label="Decider80211p::processNew\lSignal", height="0.39", width="1.92", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#a2a8f4a380e5a2ba44c36e43cc2033270", tooltip="Processes a new Signal. ", pos="791,180", rects="722,166,861,194"];
	Node8 [label="Decider80211p::processSignalEnd", height="0.22", width="2.31", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#ac39637b3c4cfad57ba0b4518fea264d9", tooltip="Processes a received AirFrame. ", pos="791,140", rects="708,132,874,148"];
	Node9 [label="PhyLayer80211p::handleSelf\lMessage", height="0.39", width="2.00", color=black, fillcolor=white, style=filled, URL="$class_phy_layer80211p.html#a6ab453897d17cd1dab056d03594dbb72", tooltip="Handles self scheduled messages. ", pos="791,100", rects="719,86,863,114"];
	Node10 [label="BaseDecider::setChannelIdle\lStatus", height="0.39", width="2.03", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ae535b44e34061014fe282c36c27b0193", tooltip="Changes the \"isIdle\"-status to the passed value. ", pos="598,60", rects="525,46,671,74"];
	Node11 [label="BaseDecider::processNewSignal", height="0.22", width="2.25", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a6a480f87157d0509c0c1fccf94ea9fef", tooltip="Processes a new Signal. ", pos="791,60", rects="710,52,873,68"];
	Node12 [label="BaseDecider::processSignal", height="0.22", width="1.92", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a273892d7b0c9874e4efe3c7755aa7a17", tooltip="Processes an AirFrame given by the PhyLayer. ", pos="979,43", rects="910,35,1048,51"];
	Node13 [label="BaseDecider::processSignalEnd", height="0.22", width="2.19", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ab9cfef6c04e12d2524d45e881f341300", tooltip="Processes the end of a received Signal. ", pos="791,26", rects="712,18,871,34"];
	Node14 [label="BaseDecider::handleNewSense\lRequest", height="0.39", width="2.17", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a1dba383c238fba606279ef483b435f78", tooltip="Handles a new incoming ChannelSenseRequest and returns the next (or latest) time to handle the reques...", pos="409,60", rects="331,46,488,74"];
	Node15 [label="BaseDecider::handleChannel\lSenseRequest", height="0.39", width="2.06", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#afd31e5a65d1798d329ace9bdbec25d64", tooltip="This function is called by the PhyLayer to hand over a ChannelSenseRequest. ", pos="598,14", rects="524,0,672,28"];
	Node16 [label="BaseDecider::handleSense\lRequestEnd", height="0.39", width="1.83", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a2f175306cc0ae9d2805bc050315a47d8", tooltip="Handles the timeout or end of a ChannelSenseRequest by calculating the ChannelState and returning the...", pos="409,14", rects="343,0,476,28"];
	Node1 -> Node2 [dir=back, color=midnightblue, style=solid, pos="s,126,87 135,88 145,90 157,91 167,92"];
	Node1 -> Node3 [dir=back, color=midnightblue, style=solid, pos="s,126,72 135,71 144,70 153,69 162,68"];
	Node3 -> Node4 [dir=back, color=midnightblue, style=solid, pos="s,294,68 303,72 314,78 316,85 330,92 334,93 338,95 341,96"];
	Node4 -> Node5 [dir=back, color=midnightblue, style=solid, pos="s,477,116 485,119 486,119 487,120 488,120 505,125 508,132 524,138 528,139 533,141 537,142"];
	Node4 -> Node6 [dir=back, color=midnightblue, style=solid, pos="s,477,106 487,106 502,106 516,106 531,106"];
	Node6 -> Node7 [dir=back, color=midnightblue, style=solid, pos="s,665,116 674,121 695,134 687,152 708,166 712,168 717,170 721,172"];
	Node6 -> Node8 [dir=back, color=midnightblue, style=solid, pos="s,665,118 674,120 689,124 693,128 708,132"];
	Node6 -> Node9 [dir=back, color=midnightblue, style=solid, pos="s,665,104 674,104 688,103 704,103 719,102"];
	Node4 -> Node10 [dir=back, color=midnightblue, style=solid, pos="s,477,95 486,93 486,92 487,92 488,92 505,86 508,79 524,74 524,74 525,74 525,74"];
	Node10 -> Node11 [dir=back, color=midnightblue, style=solid, pos="s,671,60 680,60 690,60 700,60 709,60"];
	Node11 -> Node12 [dir=back, color=midnightblue, style=solid, pos="s,873,53 882,52 891,51 901,51 910,49"];
	Node10 -> Node13 [dir=back, color=midnightblue, style=solid, pos="s,671,46 680,44 690,40 695,36 708,34 709,34 710,34 711,33"];
	Node13 -> Node12 [dir=back, color=midnightblue, style=solid, pos="s,871,33 881,34 891,35 900,36 910,37"];
	Node3 -> Node14 [dir=back, color=midnightblue, style=solid, pos="s,294,60 304,60 313,60 321,60 330,60"];
	Node14 -> Node15 [dir=back, color=midnightblue, style=solid, pos="s,488,46 496,42 507,37 511,32 524,28"];
	Node3 -> Node16 [dir=back, color=midnightblue, style=solid, pos="s,294,52 302,48 313,42 316,34 330,28 334,26 338,25 342,24"];
	Node16 -> Node15 [dir=back, color=midnightblue, style=solid, pos="s,476,14 486,14 498,14 511,14 524,14"];
}
