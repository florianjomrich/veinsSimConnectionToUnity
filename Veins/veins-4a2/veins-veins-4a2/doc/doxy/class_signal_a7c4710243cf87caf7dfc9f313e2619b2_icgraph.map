digraph "Signal::getReceptionStart" {
	graph [rankdir=LR];
	node [label="\N", fontname=Helvetica, fontsize=10, shape=record];
	edge [fontname=Helvetica, fontsize=10, labelfontname=Helvetica, labelfontsize=10];
	graph [bb="0,0,1538,601"];
	Node1 [label="Signal::getReceptionStart", height="0.22", width="1.78", color=black, fillcolor=grey75, style=filled, fontcolor=black, pos="73,239", rects="9,231,138,247"];
	Node2 [label="BaseDecider::calculateRSSIMapping", height="0.22", width="2.56", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a8ca42b7d77c0a1510255ec2a451d06d0", tooltip="Calculates a RSSI-Mapping (or Noise-Strength-Mapping) for a Signal. ", pos="267,415", rects="175,407,360,423"];
	Node3 [label="Decider80211p::calcChannel\lSenseRSSI", height="0.39", width="1.94", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#a09e54d78f37b5e61aa100ea5b9f3083f", tooltip="Calculates the RSSI value for the passed ChannelSenseRequest. ", pos="479,464", rects="409,450,549,478"];
	Node4 [label="BaseDecider::calcChannel\lSenseRSSI", height="0.39", width="1.83", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a12dd419a9e88e0b28f8d4e530e058802", tooltip="Calculates the RSSI value for the passed interval. ", pos="479,418", rects="413,404,546,432"];
	Node5 [label="BaseDecider::answerCSR", height="0.22", width="1.81", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ab8e925001d1f8630338c50f8ec10bb0d", tooltip="Answers the ChannelSenseRequest (CSR) from the passed CSRInfo. ", pos="681,451", rects="616,443,747,459"];
	Node6 [label="BaseDecider::channelState\lChanged", height="0.39", width="1.86", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#add7242168c4bb521c6335f3de590e4b0", tooltip="Checks if the changed channel state enables us to answer any ongoing ChannelSenseRequests. ", pos="879,451", rects="812,437,947,465"];
	Node7 [label="SNRThresholdDecider\l::processNewSignal", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#ace13845f43c5328cea40eb00c59af2b3", tooltip="Processes a new Signal. ", pos="1074,363", rects="1014,349,1135,377"];
	Node8 [label="Decider80211p::setChannel\lIdleStatus", height="0.39", width="1.86", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#af06ba4862697730ee05b65f6bf90279b", tooltip="Changes the \"isIdle\"-status to the passed value. ", pos="1074,409", rects="1007,395,1141,423"];
	Node9 [label="PhyLayer80211p::handleSelf\lMessage", height="0.39", width="2.00", color=black, fillcolor=white, style=filled, URL="$class_phy_layer80211p.html#a6ab453897d17cd1dab056d03594dbb72", tooltip="Handles self scheduled messages. ", pos="1273,270", rects="1201,256,1345,284"];
	Node10 [label="Decider80211p::processNew\lSignal", height="0.39", width="1.92", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#a2a8f4a380e5a2ba44c36e43cc2033270", tooltip="Processes a new Signal. ", pos="1273,409", rects="1204,395,1343,423"];
	Node11 [label="Decider80211p::processSignalEnd", height="0.22", width="2.31", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#ac39637b3c4cfad57ba0b4518fea264d9", tooltip="Processes a received AirFrame. ", pos="1273,349", rects="1190,341,1356,357"];
	Node12 [label="BaseDecider::setChannelIdle\lStatus", height="0.39", width="2.03", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ae535b44e34061014fe282c36c27b0193", tooltip="Changes the \"isIdle\"-status to the passed value. ", pos="1074,465", rects="1001,451,1147,479"];
	Node13 [label="BaseDecider::processNewSignal", height="0.22", width="2.25", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a6a480f87157d0509c0c1fccf94ea9fef", tooltip="Processes a new Signal. ", pos="1273,499", rects="1192,491,1355,507"];
	Node14 [label="BaseDecider::processSignal", height="0.22", width="1.92", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a273892d7b0c9874e4efe3c7755aa7a17", tooltip="Processes an AirFrame given by the PhyLayer. ", pos="1461,482", rects="1392,474,1530,490"];
	Node15 [label="BaseDecider::processSignalEnd", height="0.22", width="2.19", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ab9cfef6c04e12d2524d45e881f341300", tooltip="Processes the end of a received Signal. ", pos="1273,465", rects="1194,457,1353,473"];
	Node16 [label="BaseDecider::handleNewSense\lRequest", height="0.39", width="2.17", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a1dba383c238fba606279ef483b435f78", tooltip="Handles a new incoming ChannelSenseRequest and returns the next (or latest) time to handle the reques...", pos="879,497", rects="801,483,958,511"];
	Node17 [label="BaseDecider::handleChannel\lSenseRequest", height="0.39", width="2.06", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#afd31e5a65d1798d329ace9bdbec25d64", tooltip="This function is called by the PhyLayer to hand over a ChannelSenseRequest. ", pos="1074,522", rects="1000,508,1148,536"];
	Node18 [label="BaseDecider::handleSense\lRequestEnd", height="0.39", width="1.83", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a2f175306cc0ae9d2805bc050315a47d8", tooltip="Handles the timeout or end of a ChannelSenseRequest by calculating the ChannelState and returning the...", pos="879,543", rects="813,529,946,557"];
	Node19 [label="SNRThresholdDecider\l::getChannelState", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#a1e6266fe8a4d10ce5443e37321d3bcaa", tooltip="A function that returns information about the channel state. ", pos="681,408", rects="621,394,742,422"];
	Node20 [label="SNRThresholdDecider\l::answerCSR", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#aa7e33361b328274b04ff7bd2d6206e6d", tooltip="Answers the ChannelSenseRequest (CSR) from the passed CSRInfo. ", pos="879,405", rects="819,391,940,419"];
	Node21 [label="BaseDecider::getChannelState", height="0.22", width="2.11", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#af471a55749109aacb99429b409ccb9c1", tooltip="A function that returns information about the channel state. ", pos="681,485", rects="605,477,758,493"];
	Node22 [label="Decider80211p::calculate\lSinrAndSnrMapping", height="0.39", width="1.69", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#aed94d240800692fe3a7c604a6d11e54e", tooltip="Calculates a SNR-Mapping for a Signal. ", pos="479,250", rects="418,236,541,264"];
	Node23 [label="Decider80211p::checkIfSignalOk", height="0.22", width="2.25", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#a01349c12df6c01678d1e25553b754819", tooltip="Checks a mapping against a specific threshold (element-wise). ", pos="681,253", rects="600,245,763,261"];
	Node24 [label="BaseDecider::calculateSnr\lMapping", height="0.39", width="1.83", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#abac709d59f48d292f147919854c002e2", tooltip="Calculates a SNR-Mapping for a Signal. ", pos="479,296", rects="413,282,546,310"];
	Node25 [label="SNRThresholdDecider\l::processSignalEnd", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#a6002f2ee8ffa35ded0162c72f93c9fba", tooltip="Processes a received AirFrame. ", pos="681,305", rects="621,291,742,319"];
	Node26 [label="SNRThresholdDecider\l::canAnswerCSR", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#a0946c7a3e2ee04e2bb1c2dce4b7be7ec", tooltip="Returns point in time when the ChannelSenseRequest of the passed CSRInfo can be answered (e...", pos="479,510", rects="419,496,540,524"];
	Node27 [label="LogNormalShadowing\l::filterSignal", height="0.39", width="1.69", color=black, fillcolor=white, style=filled, URL="$class_log_normal_shadowing.html#abecf1f338dc41facc038dbcd8a863ccd", tooltip="Calculates shadowing loss based on a normal gaussian function. ", pos="267,178", rects="206,164,329,192"];
	Node28 [label="JakesFading::filterSignal", height="0.22", width="1.75", color=black, fillcolor=white, style=filled, URL="$class_jakes_fading.html#ae02fbdbf7ef6db9b78a3416076074190", tooltip="Has to be overriden by every implementation. ", pos="267,138", rects="204,130,331,146"];
	Node29 [label="RadioStateAnalogueModel\l::filterSignal", height="0.39", width="1.97", color=black, fillcolor=white, style=filled, URL="$class_radio_state_analogue_model.html#a5373d679bc62e9da7130d93f531adbbf", tooltip="Filters the AirFrame&#39;s Signal according to the RadioState (passively), i.e. ", pos="267,98", rects="196,84,338,112"];
	Node30 [label="BasePhyLayer::handleAirFrame\lReceiving", height="0.39", width="2.31", color=black, fillcolor=white, style=filled, URL="$class_base_phy_layer.html#a9dbbcf0004b22c622ec4b06a19b4f564", tooltip="Handles incoming AirFrames with the state RECEIVING. ", pos="267,52", rects="184,38,350,66"];
	Node31 [label="BasePhyLayer::handleAirFrame", height="0.22", width="2.31", color=black, fillcolor=white, style=filled, URL="$class_base_phy_layer.html#a8d6f371fa6ea6ca89cb78764a05f31dd", tooltip="Handles messages received from the channel (probably AirFrames). ", pos="681,73", rects="598,65,764,81"];
	Node32 [label="BasePhyLayer::handleMessage", height="0.22", width="2.19", color=black, fillcolor=white, style=filled, URL="$class_base_phy_layer.html#a3880154c8db8b8efb5315cb6ef8f6c41", tooltip="OMNeT++ handle message function. ", pos="1074,73", rects="995,65,1154,81"];
	Node33 [label="BasePhyLayer::handleSelf\lMessage", height="0.39", width="1.89", color=black, fillcolor=white, style=filled, URL="$class_base_phy_layer.html#a17088ad93f59e143ff6c7ba866a31982", tooltip="Handles self scheduled messages. ", pos="879,52", rects="811,38,948,66"];
	Node34 [label="BasePhyLayer::handleAirFrame\lStartReceive", height="0.39", width="2.31", color=black, fillcolor=white, style=filled, URL="$class_base_phy_layer.html#a671f083680882230b754b7e9578e6274", tooltip="Handles incoming AirFrames with the state START_RECEIVE. ", pos="479,31", rects="396,17,562,45"];
	Node1 -> Node2 [dir=back, color=midnightblue, style=solid, pos="s,138,247 144,253 187,301 122,362 174,407"];
	Node2 -> Node3 [dir=back, color=midnightblue, style=solid, pos="s,360,423 368,427 379,434 381,443 396,450 400,452 404,453 409,454"];
	Node2 -> Node4 [dir=back, color=midnightblue, style=solid, pos="s,360,416 369,416 384,416 399,417 412,417"];
	Node4 -> Node5 [dir=back, color=midnightblue, style=solid, pos="s,546,428 555,430 557,431 560,432 562,432 579,435 582,439 598,443 604,444 609,445 615,446"];
	Node5 -> Node6 [dir=back, color=midnightblue, style=solid, pos="s,747,451 757,451 775,451 794,451 811,451"];
	Node6 -> Node7 [dir=back, color=midnightblue, style=solid, pos="s,947,443 955,439 956,438 957,438 958,437 984,419 969,395 994,377 1000,373 1006,370 1013,368"];
	Node6 -> Node8 [dir=back, color=midnightblue, style=solid, pos="s,947,440 955,438 956,437 957,437 958,437 975,432 978,427 994,423 998,422 1002,421 1007,420"];
	Node8 -> Node9 [dir=back, color=midnightblue, style=solid, pos="s,1141,403 1150,398 1151,397 1153,396 1154,395 1194,361 1151,318 1190,284 1193,281 1197,279 1201,277"];
	Node8 -> Node10 [dir=back, color=midnightblue, style=solid, pos="s,1141,409 1151,409 1168,409 1186,409 1203,409"];
	Node8 -> Node11 [dir=back, color=midnightblue, style=solid, pos="s,1141,401 1149,397 1151,396 1153,396 1154,395 1175,384 1170,368 1190,357"];
	Node6 -> Node12 [dir=back, color=midnightblue, style=solid, pos="s,947,456 957,457 971,458 986,459 1001,460"];
	Node12 -> Node13 [dir=back, color=midnightblue, style=solid, pos="s,1147,477 1156,479 1171,483 1175,487 1190,491 1190,491 1191,491 1191,491"];
	Node13 -> Node14 [dir=back, color=midnightblue, style=solid, pos="s,1355,492 1364,491 1373,490 1383,490 1392,488"];
	Node12 -> Node15 [dir=back, color=midnightblue, style=solid, pos="s,1147,465 1157,465 1169,465 1181,465 1193,465"];
	Node15 -> Node14 [dir=back, color=midnightblue, style=solid, pos="s,1353,472 1363,473 1373,474 1382,475 1392,476"];
	Node5 -> Node16 [dir=back, color=midnightblue, style=solid, pos="s,747,454 756,456 759,457 762,458 764,459 783,465 783,475 800,483"];
	Node16 -> Node17 [dir=back, color=midnightblue, style=solid, pos="s,958,507 967,508 978,510 989,511 1000,512"];
	Node5 -> Node18 [dir=back, color=midnightblue, style=solid, pos="s,747,451 755,454 758,455 761,457 764,459 793,478 772,508 800,529 804,532 808,534 812,536"];
	Node18 -> Node17 [dir=back, color=midnightblue, style=solid, pos="s,946,536 955,535 969,533 985,532 1000,530"];
	Node4 -> Node19 [dir=back, color=midnightblue, style=solid, pos="s,546,415 555,415 576,414 600,412 620,411"];
	Node19 -> Node20 [dir=back, color=midnightblue, style=solid, pos="s,742,407 751,407 773,407 797,406 818,406"];
	Node4 -> Node21 [dir=back, color=midnightblue, style=solid, pos="s,546,425 555,428 557,429 560,431 562,432 585,444 576,464 598,477 600,478 602,479 604,480"];
	Node2 -> Node22 [dir=back, color=midnightblue, style=solid, pos="s,360,407 367,400 404,359 351,307 396,264 402,259 410,255 417,252"];
	Node22 -> Node23 [dir=back, color=midnightblue, style=solid, pos="s,541,251 550,251 565,251 583,252 599,252"];
	Node23 -> Node11 [dir=back, color=midnightblue, style=solid, pos="s,763,261 772,262 956,290 1003,314 1190,341"];
	Node2 -> Node24 [dir=back, color=midnightblue, style=solid, pos="s,360,407 368,400 392,374 364,338 396,310 401,306 406,303 412,301"];
	Node24 -> Node23 [dir=back, color=midnightblue, style=solid, pos="s,546,287 555,285 557,284 560,283 562,282 580,276 581,267 598,261 598,261 599,261 599,261"];
	Node24 -> Node25 [dir=back, color=midnightblue, style=solid, pos="s,546,299 555,299 577,300 600,301 620,302"];
	Node2 -> Node26 [dir=back, color=midnightblue, style=solid, pos="s,360,423 368,429 386,449 370,476 396,496 403,501 410,504 418,506"];
	Node1 -> Node22 [dir=back, color=midnightblue, style=solid, pos="s,138,241 146,241 223,243 345,246 417,248"];
	Node1 -> Node24 [dir=back, color=midnightblue, style=solid, pos="s,108,247 117,249 134,253 155,257 174,260 256,273 350,284 412,290"];
	Node1 -> Node23 [dir=back, color=midnightblue, style=solid, pos="s,119,231 128,230 218,216 407,194 562,227 580,231 582,239 598,243 601,244 603,244 606,245"];
	Node1 -> Node27 [dir=back, color=midnightblue, style=solid, pos="s,138,231 145,226 158,216 157,202 174,192 184,187 194,184 205,182"];
	Node1 -> Node28 [dir=back, color=midnightblue, style=solid, pos="s,138,231 145,224 166,201 144,169 174,146 183,140 193,136 203,135"];
	Node1 -> Node29 [dir=back, color=midnightblue, style=solid, pos="s,138,231 145,225 176,190 135,147 174,112 180,107 188,103 196,100"];
	Node1 -> Node30 [dir=back, color=midnightblue, style=solid, pos="s,138,231 145,224 188,176 122,116 174,66 177,63 180,61 184,59"];
	Node30 -> Node31 [dir=back, color=midnightblue, style=solid, pos="s,350,56 359,56 430,60 529,65 598,69"];
	Node31 -> Node32 [dir=back, color=midnightblue, style=solid, pos="s,764,75 773,75 782,75 792,75 800,75 871,76 888,76 958,75 970,75 982,75 994,75"];
	Node31 -> Node9 [dir=back, color=midnightblue, style=solid, pos="s,756,81 765,83 962,135 994,201 1190,256 1194,257 1197,258 1201,259"];
	Node31 -> Node33 [dir=back, color=midnightblue, style=solid, pos="s,764,65 774,64 786,63 798,62 810,60"];
	Node33 -> Node32 [dir=back, color=midnightblue, style=solid, pos="s,948,60 957,61 969,63 982,64 994,65"];
	Node30 -> Node34 [dir=back, color=midnightblue, style=solid, pos="s,350,44 359,43 371,42 384,41 396,39"];
	Node34 -> Node31 [dir=back, color=midnightblue, style=solid, pos="s,562,45 570,49 581,55 584,61 598,65"];
	Node1 -> Node34 [dir=back, color=midnightblue, style=solid, pos="s,107,231 115,229 126,225 136,222 138,220 197,156 108,85 174,29 207,2 317,10 396,19"];
	Node1 -> Node7 [dir=back, color=midnightblue, style=solid, pos="s,95,247 103,250 122,258 143,267 150,273 161,283 165,284 170,296 173,303 169,323 174,327 235,385 821,371 1013,365"];
	Node1 -> Node13 [dir=back, color=midnightblue, style=solid, pos="s,105,247 113,249 125,253 136,256 138,258 192,317 126,370 174,432 267,552 328,585 479,585 479,585 479,585 879,585 1003,585 1045,\
601 1154,545 1175,534 1170,517 1190,507 1190,507 1191,507 1191,506"];
	Node1 -> Node25 [dir=back, color=midnightblue, style=solid, pos="s,98,247 106,250 125,256 146,264 154,269 158,272 159,273 162,275 168,280 168,284 174,287 329,365 390,330 562,319 581,318 602,316\
 620,314"];
}
