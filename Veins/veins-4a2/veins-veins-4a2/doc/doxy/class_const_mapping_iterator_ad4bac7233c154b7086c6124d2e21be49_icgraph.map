digraph "ConstMappingIterator::hasNext" {
	graph [rankdir=LR];
	node [label="\N", fontname=Helvetica, fontsize=10, shape=record];
	edge [fontname=Helvetica, fontsize=10, labelfontname=Helvetica, labelfontsize=10];
	graph [bb="0,0,1474,448"];
	Node1 [label="ConstMappingIterator\l::hasNext", height="0.39", width="1.64", color=black, fillcolor=grey75, style=filled, fontcolor=black, pos="68,220", rects="9,206,128,234"];
	Node2 [label="SNRThresholdDecider\l::checkIfAboveThreshold", height="0.39", width="1.83", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#a1d796e2f0da1c41810c5f2c5b4cfcd2e", tooltip="Checks a mapping against a specific threshold (element-wise). ", pos="247,430", rects="181,416,313,444"];
	Node3 [label="SNRThresholdDecider\l::processSignalEnd", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#a6002f2ee8ffa35ded0162c72f93c9fba", tooltip="Processes a received AirFrame. ", pos="436,430", rects="376,416,497,444"];
	Node4 [label="MappingUtils::createCompatible\lMapping", height="0.39", width="2.31", color=black, fillcolor=white, style=filled, URL="$class_mapping_utils.html#a6d524e08add1a4a02d7e37425783b094", pos="247,384", rects="164,370,330,398"];
	Node5 [label="FilledUpMapping::FilledUp\lMapping", height="0.39", width="1.97", color=black, fillcolor=white, style=filled, URL="$class_filled_up_mapping.html#aa090d76ebccf9be3283594989b528ba7", pos="247,338", rects="176,324,319,352"];
	Node6 [label="MappingUtils::findMax", height="0.22", width="1.72", color=black, fillcolor=white, style=filled, URL="$class_mapping_utils.html#afbe1a1e1d2becd66d2c0d5a8ac42b478", tooltip="Iterates over the passed mapping and returns value at the key entry with the highest value...", pos="247,298", rects="185,290,310,306"];
	Node7 [label="BaseDecider::calcChannel\lSenseRSSI", height="0.39", width="1.83", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a12dd419a9e88e0b28f8d4e530e058802", tooltip="Calculates the RSSI value for the passed interval. ", pos="436,358", rects="370,344,503,372"];
	Node8 [label="BaseDecider::answerCSR", height="0.22", width="1.81", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ab8e925001d1f8630338c50f8ec10bb0d", tooltip="Answers the ChannelSenseRequest (CSR) from the passed CSRInfo. ", pos="619,332", rects="554,324,685,340"];
	Node9 [label="BaseDecider::channelState\lChanged", height="0.39", width="1.86", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#add7242168c4bb521c6335f3de590e4b0", tooltip="Checks if the changed channel state enables us to answer any ongoing ChannelSenseRequests. ", pos="811,378", rects="744,364,879,392"];
	Node10 [label="SNRThresholdDecider\l::processNewSignal", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#ace13845f43c5328cea40eb00c59af2b3", tooltip="Processes a new Signal. ", pos="1008,332", rects="948,318,1069,346"];
	Node11 [label="Decider80211p::setChannel\lIdleStatus", height="0.39", width="1.86", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#af06ba4862697730ee05b65f6bf90279b", tooltip="Changes the \"isIdle\"-status to the passed value. ", pos="1008,378", rects="941,364,1075,392"];
	Node12 [label="Decider80211p::processNew\lSignal", height="0.39", width="1.92", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#a2a8f4a380e5a2ba44c36e43cc2033270", tooltip="Processes a new Signal. ", pos="1209,362", rects="1140,348,1279,376"];
	Node13 [label="Decider80211p::processSignalEnd", height="0.22", width="2.31", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#ac39637b3c4cfad57ba0b4518fea264d9", tooltip="Processes a received AirFrame. ", pos="1209,246", rects="1126,238,1292,254"];
	Node14 [label="PhyLayer80211p::handleSelf\lMessage", height="0.39", width="2.00", color=black, fillcolor=white, style=filled, URL="$class_phy_layer80211p.html#a6ab453897d17cd1dab056d03594dbb72", tooltip="Handles self scheduled messages. ", pos="1209,307", rects="1137,293,1281,321"];
	Node15 [label="BaseDecider::setChannelIdle\lStatus", height="0.39", width="2.03", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ae535b44e34061014fe282c36c27b0193", tooltip="Changes the \"isIdle\"-status to the passed value. ", pos="1008,424", rects="935,410,1081,438"];
	Node16 [label="BaseDecider::processNewSignal", height="0.22", width="2.25", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a6a480f87157d0509c0c1fccf94ea9fef", tooltip="Processes a new Signal. ", pos="1209,440", rects="1128,432,1291,448"];
	Node17 [label="BaseDecider::processSignal", height="0.22", width="1.92", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a273892d7b0c9874e4efe3c7755aa7a17", tooltip="Processes an AirFrame given by the PhyLayer. ", pos="1397,423", rects="1328,415,1466,431"];
	Node18 [label="BaseDecider::processSignalEnd", height="0.22", width="2.19", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ab9cfef6c04e12d2524d45e881f341300", tooltip="Processes the end of a received Signal. ", pos="1209,406", rects="1130,398,1289,414"];
	Node19 [label="BaseDecider::handleNewSense\lRequest", height="0.39", width="2.17", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a1dba383c238fba606279ef483b435f78", tooltip="Handles a new incoming ChannelSenseRequest and returns the next (or latest) time to handle the reques...", pos="811,332", rects="733,318,890,346"];
	Node20 [label="BaseDecider::handleChannel\lSenseRequest", height="0.39", width="2.06", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#afd31e5a65d1798d329ace9bdbec25d64", tooltip="This function is called by the PhyLayer to hand over a ChannelSenseRequest. ", pos="1008,286", rects="934,272,1082,300"];
	Node21 [label="BaseDecider::handleSense\lRequestEnd", height="0.39", width="1.83", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a2f175306cc0ae9d2805bc050315a47d8", tooltip="Handles the timeout or end of a ChannelSenseRequest by calculating the ChannelState and returning the...", pos="811,286", rects="745,272,878,300"];
	Node22 [label="SNRThresholdDecider\l::getChannelState", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#a1e6266fe8a4d10ce5443e37321d3bcaa", tooltip="A function that returns information about the channel state. ", pos="619,415", rects="559,401,680,429"];
	Node23 [label="SNRThresholdDecider\l::answerCSR", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#aa7e33361b328274b04ff7bd2d6206e6d", tooltip="Answers the ChannelSenseRequest (CSR) from the passed CSRInfo. ", pos="811,424", rects="751,410,872,438"];
	Node24 [label="BaseDecider::getChannelState", height="0.22", width="2.11", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#af471a55749109aacb99429b409ccb9c1", tooltip="A function that returns information about the channel state. ", pos="619,366", rects="543,358,696,374"];
	Node25 [label="Decider80211p::calcChannel\lSenseRSSI", height="0.39", width="1.94", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#a09e54d78f37b5e61aa100ea5b9f3083f", tooltip="Calculates the RSSI value for the passed ChannelSenseRequest. ", pos="436,304", rects="366,290,506,318"];
	Node26 [label="MappingUtils::findMin", height="0.22", width="1.69", color=black, fillcolor=white, style=filled, URL="$class_mapping_utils.html#a5d9c4e3dcaddccfa65f21212d0fee2cf", tooltip="Iterates over the passed mapping and returns value at the key entry with the smallest value...", pos="811,246", rects="750,238,873,254"];
	Node27 [label="Decider80211p::checkIfSignalOk", height="0.22", width="2.25", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#a01349c12df6c01678d1e25553b754819", tooltip="Checks a mapping against a specific threshold (element-wise). ", pos="1008,212", rects="927,204,1090,220"];
	Node28 [label="Decider80211p::cca", height="0.22", width="1.33", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#aeba984a7f23ef26ce8b22b0bfef88947", pos="1008,246", rects="960,238,1056,254"];
	Node29 [label="ConstMappingIteratorWrapper\l::hasNext", height="0.39", width="2.28", color=black, fillcolor=white, style=filled, URL="$class_const_mapping_iterator_wrapper.html#ab60f4f00ba7175122fe6afef43b7cfbc", tooltip="Returns true if the iterator has a next value it can iterate to on a call to \"next()\". ", pos="247,220", rects="165,206,329,234"];
	Node30 [label="MultiDimMappingIterator\l\< Linear \>::hasNext", height="0.39", width="1.94", color=black, fillcolor=white, style=filled, URL="$class_multi_dim_mapping_iterator.html#a99bbed82612268040bb8f5162871fb48", tooltip="Returns true if the iterator has a valid next value a call to \"next()\" could jump to...", pos="247,174", rects="177,160,318,188"];
	Node31 [label="MappingUtils::iterateToNext", height="0.22", width="2.06", color=black, fillcolor=white, style=filled, URL="$class_mapping_utils.html#a6a768601098bcb0d998be2c742126433", pos="247,134", rects="173,126,322,142"];
	Node32 [label="MultiDimMappingIterator\l\< Linear \>::next", height="0.39", width="1.94", color=black, fillcolor=white, style=filled, URL="$class_multi_dim_mapping_iterator.html#a8928195a1fe4bb3af81d3ffe2391827e", tooltip="Iterates to the next position of the function. ", pos="247,94", rects="177,80,318,108"];
	Node33 [label="ConstMapping::print", height="0.22", width="1.53", color=black, fillcolor=white, style=filled, URL="$class_const_mapping.html#a526e8d5b948e9b2ce9d729e66b162e13", tooltip="Prints the Mapping to an output stream. ", pos="247,54", rects="192,46,302,62"];
	Node34 [label="MultiDimMappingIterator\l\< Linear \>::updateNextPosition", height="0.39", width="2.25", color=black, fillcolor=white, style=filled, URL="$class_multi_dim_mapping_iterator.html#a1eb04551f2a3ae22f0eae4844f14ac97", tooltip="Helper method which updates the nextPosition member. ", pos="247,14", rects="166,0,328,28"];
	Node1 -> Node2 [dir=back, color=midnightblue, style=solid, pos="s,128,234 135,242 179,299 108,360 164,416 169,421 175,424 181,427"];
	Node2 -> Node3 [dir=back, color=midnightblue, style=solid, pos="s,313,430 323,430 340,430 359,430 375,430"];
	Node1 -> Node4 [dir=back, color=midnightblue, style=solid, pos="s,128,234 135,242 167,283 121,330 164,370"];
	Node1 -> Node5 [dir=back, color=midnightblue, style=solid, pos="s,128,234 135,241 157,267 134,298 164,324 168,327 171,329 175,331"];
	Node1 -> Node6 [dir=back, color=midnightblue, style=solid, pos="s,128,234 135,240 150,256 142,276 164,290 170,294 177,296 184,298"];
	Node6 -> Node7 [dir=back, color=midnightblue, style=solid, pos="s,310,299 319,301 323,303 327,304 330,306 351,316 346,332 366,344 367,345 368,345 369,346"];
	Node7 -> Node8 [dir=back, color=midnightblue, style=solid, pos="s,503,346 512,345 522,343 532,342 542,340 546,339 549,339 553,338"];
	Node8 -> Node9 [dir=back, color=midnightblue, style=solid, pos="s,685,337 693,339 694,339 695,340 696,340 715,346 715,356 732,364 736,365 740,367 743,368"];
	Node9 -> Node10 [dir=back, color=midnightblue, style=solid, pos="s,879,367 888,365 888,364 889,364 890,364 907,358 909,351 926,346 933,344 940,342 947,340"];
	Node9 -> Node11 [dir=back, color=midnightblue, style=solid, pos="s,879,378 889,378 906,378 924,378 941,378"];
	Node11 -> Node12 [dir=back, color=midnightblue, style=solid, pos="s,1075,373 1084,372 1102,370 1121,369 1139,368"];
	Node11 -> Node13 [dir=back, color=midnightblue, style=solid, pos="s,1075,373 1083,369 1086,368 1088,366 1090,364 1129,330 1086,286 1126,254"];
	Node11 -> Node14 [dir=back, color=midnightblue, style=solid, pos="s,1075,371 1083,368 1085,367 1088,365 1090,364 1112,351 1105,333 1126,321 1129,319 1133,317 1137,316"];
	Node9 -> Node15 [dir=back, color=midnightblue, style=solid, pos="s,879,388 887,391 888,391 889,392 890,392 907,397 909,404 926,410 929,411 932,412 935,412"];
	Node15 -> Node16 [dir=back, color=midnightblue, style=solid, pos="s,1081,430 1091,431 1103,431 1115,432 1127,433"];
	Node16 -> Node17 [dir=back, color=midnightblue, style=solid, pos="s,1291,433 1300,432 1309,431 1319,431 1328,429"];
	Node15 -> Node18 [dir=back, color=midnightblue, style=solid, pos="s,1081,417 1090,416 1103,415 1116,414 1129,413"];
	Node18 -> Node17 [dir=back, color=midnightblue, style=solid, pos="s,1289,413 1299,414 1309,415 1318,416 1328,417"];
	Node8 -> Node19 [dir=back, color=midnightblue, style=solid, pos="s,685,332 695,332 707,332 720,332 732,332"];
	Node19 -> Node20 [dir=back, color=midnightblue, style=solid, pos="s,890,318 899,314 908,309 913,304 926,300 929,299 931,298 934,298"];
	Node8 -> Node21 [dir=back, color=midnightblue, style=solid, pos="s,685,327 694,325 694,324 695,324 696,324 715,317 715,307 732,300 736,298 740,297 744,296"];
	Node21 -> Node20 [dir=back, color=midnightblue, style=solid, pos="s,878,286 888,286 903,286 918,286 934,286"];
	Node7 -> Node22 [dir=back, color=midnightblue, style=solid, pos="s,503,370 512,375 525,383 526,393 542,401 547,403 553,405 558,407"];
	Node22 -> Node23 [dir=back, color=midnightblue, style=solid, pos="s,680,418 690,418 709,419 731,420 750,421"];
	Node7 -> Node24 [dir=back, color=midnightblue, style=solid, pos="s,503,361 513,361 523,362 532,362 542,363"];
	Node6 -> Node25 [dir=back, color=midnightblue, style=solid, pos="s,310,300 320,300 335,301 351,301 366,302"];
	Node1 -> Node26 [dir=back, color=midnightblue, style=solid, pos="s,119,234 127,236 139,239 152,241 164,243 378,268 634,257 749,250"];
	Node26 -> Node27 [dir=back, color=midnightblue, style=solid, pos="s,873,242 882,240 884,240 887,239 890,238 908,233 909,224 926,220"];
	Node27 -> Node13 [dir=back, color=midnightblue, style=solid, pos="s,1090,220 1099,223 1109,227 1112,234 1126,238"];
	Node26 -> Node28 [dir=back, color=midnightblue, style=solid, pos="s,873,246 883,246 908,246 937,246 960,246"];
	Node28 -> Node12 [dir=back, color=midnightblue, style=solid, pos="s,1056,242 1065,243 1074,245 1082,248 1090,254 1126,281 1092,319 1126,348 1130,351 1135,354 1139,356"];
	Node28 -> Node13 [dir=back, color=midnightblue, style=solid, pos="s,1056,246 1065,246 1084,246 1105,246 1126,246"];
	Node28 -> Node14 [dir=back, color=midnightblue, style=solid, pos="s,1056,245 1064,246 1073,247 1082,250 1090,254 1112,264 1106,281 1126,293 1129,295 1133,296 1137,298"];
	Node1 -> Node29 [dir=back, color=midnightblue, style=solid, pos="s,128,220 138,220 147,220 156,220 165,220"];
	Node1 -> Node30 [dir=back, color=midnightblue, style=solid, pos="s,128,206 136,202 146,197 150,192 164,188 168,187 172,185 176,184"];
	Node1 -> Node31 [dir=back, color=midnightblue, style=solid, pos="s,128,206 135,200 152,181 140,157 164,142 167,140 169,139 172,137"];
	Node1 -> Node32 [dir=back, color=midnightblue, style=solid, pos="s,128,206 135,199 158,170 132,135 164,108 168,105 172,103 176,101"];
	Node1 -> Node33 [dir=back, color=midnightblue, style=solid, pos="s,128,206 134,199 170,154 117,104 164,62 172,55 182,52 192,50"];
	Node1 -> Node34 [dir=back, color=midnightblue, style=solid, pos="s,128,206 134,199 179,143 109,83 164,28 165,27 165,27 166,26"];
}
