digraph "BaseDecider::calcChannelSenseRSSI" {
	graph [rankdir=LR];
	node [label="\N", fontname=Helvetica, fontsize=10, shape=record];
	edge [fontname=Helvetica, fontsize=10, labelfontname=Helvetica, labelfontsize=10];
	graph [bb="0,0,1094,276"];
	Node1 [label="BaseDecider::calcChannel\lSenseRSSI", height="0.39", width="1.83", color=black, fillcolor=grey75, style=filled, fontcolor=black, pos="75,48", rects="9,34,142,62"];
	Node2 [label="BaseDecider::answerCSR", height="0.22", width="1.81", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ab8e925001d1f8630338c50f8ec10bb0d", tooltip="Answers the ChannelSenseRequest (CSR) from the passed CSRInfo. ", pos="255,102", rects="190,94,321,110"];
	Node3 [label="BaseDecider::channelState\lChanged", height="0.39", width="1.86", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#add7242168c4bb521c6335f3de590e4b0", tooltip="Checks if the changed channel state enables us to answer any ongoing ChannelSenseRequests. ", pos="447,171", rects="380,157,515,185"];
	Node4 [label="BaseDecider::setChannelIdle\lStatus", height="0.39", width="2.03", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ae535b44e34061014fe282c36c27b0193", tooltip="Changes the \"isIdle\"-status to the passed value. ", pos="636,234", rects="563,220,709,248"];
	Node5 [label="BaseDecider::processNewSignal", height="0.22", width="2.25", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a6a480f87157d0509c0c1fccf94ea9fef", tooltip="Processes a new Signal. ", pos="829,268", rects="748,260,911,276"];
	Node6 [label="BaseDecider::processSignal", height="0.22", width="1.92", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a273892d7b0c9874e4efe3c7755aa7a17", tooltip="Processes an AirFrame given by the PhyLayer. ", pos="1017,251", rects="948,243,1086,259"];
	Node7 [label="BaseDecider::processSignalEnd", height="0.22", width="2.19", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#ab9cfef6c04e12d2524d45e881f341300", tooltip="Processes the end of a received Signal. ", pos="829,234", rects="750,226,909,242"];
	Node8 [label="Decider80211p::setChannel\lIdleStatus", height="0.39", width="1.86", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#af06ba4862697730ee05b65f6bf90279b", tooltip="Changes the \"isIdle\"-status to the passed value. ", pos="636,171", rects="569,157,703,185"];
	Node9 [label="Decider80211p::processNew\lSignal", height="0.39", width="1.92", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#a2a8f4a380e5a2ba44c36e43cc2033270", tooltip="Processes a new Signal. ", pos="829,194", rects="760,180,899,208"];
	Node10 [label="Decider80211p::processSignalEnd", height="0.22", width="2.31", color=black, fillcolor=white, style=filled, URL="$class_decider80211p.html#ac39637b3c4cfad57ba0b4518fea264d9", tooltip="Processes a received AirFrame. ", pos="829,154", rects="746,146,912,162"];
	Node11 [label="PhyLayer80211p::handleSelf\lMessage", height="0.39", width="2.00", color=black, fillcolor=white, style=filled, URL="$class_phy_layer80211p.html#a6ab453897d17cd1dab056d03594dbb72", tooltip="Handles self scheduled messages. ", pos="829,114", rects="757,100,901,128"];
	Node12 [label="SNRThresholdDecider\l::processNewSignal", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#ace13845f43c5328cea40eb00c59af2b3", tooltip="Processes a new Signal. ", pos="636,125", rects="576,111,697,139"];
	Node13 [label="BaseDecider::handleNewSense\lRequest", height="0.39", width="2.17", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a1dba383c238fba606279ef483b435f78", tooltip="Handles a new incoming ChannelSenseRequest and returns the next (or latest) time to handle the reques...", pos="447,125", rects="369,111,526,139"];
	Node14 [label="BaseDecider::handleChannel\lSenseRequest", height="0.39", width="2.06", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#afd31e5a65d1798d329ace9bdbec25d64", tooltip="This function is called by the PhyLayer to hand over a ChannelSenseRequest. ", pos="636,79", rects="562,65,710,93"];
	Node15 [label="BaseDecider::handleSense\lRequestEnd", height="0.39", width="1.83", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#a2f175306cc0ae9d2805bc050315a47d8", tooltip="Handles the timeout or end of a ChannelSenseRequest by calculating the ChannelState and returning the...", pos="447,79", rects="381,65,514,93"];
	Node16 [label="SNRThresholdDecider\l::getChannelState", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#a1e6266fe8a4d10ce5443e37321d3bcaa", tooltip="A function that returns information about the channel state. ", pos="255,48", rects="195,34,316,62"];
	Node17 [label="SNRThresholdDecider\l::answerCSR", height="0.39", width="1.67", color=black, fillcolor=white, style=filled, URL="$class_s_n_r_threshold_decider.html#aa7e33361b328274b04ff7bd2d6206e6d", tooltip="Answers the ChannelSenseRequest (CSR) from the passed CSRInfo. ", pos="447,33", rects="387,19,508,47"];
	Node18 [label="BaseDecider::getChannelState", height="0.22", width="2.11", color=black, fillcolor=white, style=filled, URL="$class_base_decider.html#af471a55749109aacb99429b409ccb9c1", tooltip="A function that returns information about the channel state. ", pos="255,8", rects="179,0,332,16"];
	Node1 -> Node2 [dir=back, color=midnightblue, style=solid, pos="s,142,62 150,67 162,76 162,87 178,94 182,96 185,97 189,98"];
	Node2 -> Node3 [dir=back, color=midnightblue, style=solid, pos="s,321,105 329,109 330,109 331,109 332,110 355,123 346,144 368,157 372,159 375,161 379,162"];
	Node3 -> Node4 [dir=back, color=midnightblue, style=solid, pos="s,515,180 524,184 525,184 525,185 526,185 546,195 543,209 562,220 562,220 562,220 563,220"];
	Node4 -> Node5 [dir=back, color=midnightblue, style=solid, pos="s,709,248 718,250 728,253 733,257 746,260 746,260 747,260 747,260"];
	Node5 -> Node6 [dir=back, color=midnightblue, style=solid, pos="s,911,261 920,260 929,259 939,259 948,257"];
	Node4 -> Node7 [dir=back, color=midnightblue, style=solid, pos="s,709,234 719,234 729,234 739,234 749,234"];
	Node7 -> Node6 [dir=back, color=midnightblue, style=solid, pos="s,909,241 919,242 929,243 938,244 948,245"];
	Node3 -> Node8 [dir=back, color=midnightblue, style=solid, pos="s,515,171 525,171 540,171 554,171 569,171"];
	Node8 -> Node9 [dir=back, color=midnightblue, style=solid, pos="s,703,179 712,180 727,182 744,184 759,186"];
	Node8 -> Node10 [dir=back, color=midnightblue, style=solid, pos="s,703,165 713,164 724,163 735,162 746,161"];
	Node8 -> Node11 [dir=back, color=midnightblue, style=solid, pos="s,703,160 712,156 729,148 729,137 746,128 749,127 753,125 757,124"];
	Node3 -> Node12 [dir=back, color=midnightblue, style=solid, pos="s,515,160 524,158 524,157 525,157 526,157 543,152 546,145 562,139 566,138 571,136 575,135"];
	Node2 -> Node13 [dir=back, color=midnightblue, style=solid, pos="s,321,109 330,110 330,110 331,110 332,110 344,111 356,113 368,114"];
	Node13 -> Node14 [dir=back, color=midnightblue, style=solid, pos="s,526,111 534,108 545,103 549,98 562,93"];
	Node2 -> Node15 [dir=back, color=midnightblue, style=solid, pos="s,321,96 330,95 330,94 331,94 332,94 348,92 364,91 380,89"];
	Node15 -> Node14 [dir=back, color=midnightblue, style=solid, pos="s,514,79 524,79 536,79 549,79 562,79"];
	Node1 -> Node16 [dir=back, color=midnightblue, style=solid, pos="s,142,48 152,48 166,48 181,48 194,48"];
	Node16 -> Node17 [dir=back, color=midnightblue, style=solid, pos="s,316,43 326,42 345,40 367,39 386,38"];
	Node1 -> Node18 [dir=back, color=midnightblue, style=solid, pos="s,142,34 151,31 160,26 165,21 178,16"];
}
